/**
 * Generated bundle index. Do not edit.
 */
export * from './index';
export { BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, _document as ɵangular_packages_platform_browser_platform_browser_b, errorHandler as ɵangular_packages_platform_browser_platform_browser_a } from './src/browser';
export { GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_p } from './src/browser/generic_browser_adapter';
export { createMeta as ɵangular_packages_platform_browser_platform_browser_d } from './src/browser/meta';
export { SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k } from './src/browser/server-transition';
export { createTitle as ɵangular_packages_platform_browser_platform_browser_e } from './src/browser/title';
export { initTransferState as ɵangular_packages_platform_browser_platform_browser_f } from './src/browser/transfer_state';
export { BrowserXhr as ɵangular_packages_platform_browser_platform_browser_o } from './src/browser/xhr';
export { ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n, _createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m } from './src/dom/debug/ng_probe';
export { EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g } from './src/dom/events/event_manager';
export { HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h } from './src/dom/events/hammer_gestures';
export { domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j } from './src/security/dom_sanitization_service';

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGxhdGZvcm0tYnJvd3Nlci5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvcGxhdGZvcm0tYnJvd3Nlci9wbGF0Zm9ybS1icm93c2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSxHQUFHO0FBRUgsY0FBYyxTQUFTLENBQUM7QUFFeEIsT0FBTyxFQUFDLHdCQUF3QixJQUFJLHFEQUFxRCxFQUFDLFNBQVMsSUFBSSxxREFBcUQsRUFBQyxZQUFZLElBQUkscURBQXFELEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDelAsT0FBTyxFQUFDLHdCQUF3QixJQUFJLHFEQUFxRCxFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFDeEksT0FBTyxFQUFDLFVBQVUsSUFBSSxxREFBcUQsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3ZHLE9BQU8sRUFBQywyQkFBMkIsSUFBSSxxREFBcUQsRUFBQyxxQkFBcUIsSUFBSSxxREFBcUQsRUFBQyxNQUFNLGlDQUFpQyxDQUFDO0FBQ3BOLE9BQU8sRUFBQyxXQUFXLElBQUkscURBQXFELEVBQUMsTUFBTSxxQkFBcUIsQ0FBQztBQUN6RyxPQUFPLEVBQUMsaUJBQWlCLElBQUkscURBQXFELEVBQUMsTUFBTSw4QkFBOEIsQ0FBQztBQUN4SCxPQUFPLEVBQUMsVUFBVSxJQUFJLHFEQUFxRCxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDdEcsT0FBTyxFQUFDLGlDQUFpQyxJQUFJLHFEQUFxRCxFQUFDLGdCQUFnQixJQUFJLHFEQUFxRCxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDOU0sT0FBTyxFQUFDLGtCQUFrQixJQUFJLHFEQUFxRCxFQUFDLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0gsT0FBTyxFQUFDLGdCQUFnQixJQUFJLHFEQUFxRCxFQUFDLDBCQUEwQixJQUFJLHFEQUFxRCxFQUFDLE1BQU0sa0NBQWtDLENBQUM7QUFDL00sT0FBTyxFQUFDLHVCQUF1QixJQUFJLHFEQUFxRCxFQUFDLE1BQU0seUNBQXlDLENBQUM7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9pbmRleCc7XG5cbmV4cG9ydCB7QlJPV1NFUl9NT0RVTEVfUFJPVklERVJTIGFzIMm1YW5ndWxhcl9wYWNrYWdlc19wbGF0Zm9ybV9icm93c2VyX3BsYXRmb3JtX2Jyb3dzZXJfYyxfZG9jdW1lbnQgYXMgybVhbmd1bGFyX3BhY2thZ2VzX3BsYXRmb3JtX2Jyb3dzZXJfcGxhdGZvcm1fYnJvd3Nlcl9iLGVycm9ySGFuZGxlciBhcyDJtWFuZ3VsYXJfcGFja2FnZXNfcGxhdGZvcm1fYnJvd3Nlcl9wbGF0Zm9ybV9icm93c2VyX2F9IGZyb20gJy4vc3JjL2Jyb3dzZXInO1xuZXhwb3J0IHtHZW5lcmljQnJvd3NlckRvbUFkYXB0ZXIgYXMgybVhbmd1bGFyX3BhY2thZ2VzX3BsYXRmb3JtX2Jyb3dzZXJfcGxhdGZvcm1fYnJvd3Nlcl9wfSBmcm9tICcuL3NyYy9icm93c2VyL2dlbmVyaWNfYnJvd3Nlcl9hZGFwdGVyJztcbmV4cG9ydCB7Y3JlYXRlTWV0YSBhcyDJtWFuZ3VsYXJfcGFja2FnZXNfcGxhdGZvcm1fYnJvd3Nlcl9wbGF0Zm9ybV9icm93c2VyX2R9IGZyb20gJy4vc3JjL2Jyb3dzZXIvbWV0YSc7XG5leHBvcnQge1NFUlZFUl9UUkFOU0lUSU9OX1BST1ZJREVSUyBhcyDJtWFuZ3VsYXJfcGFja2FnZXNfcGxhdGZvcm1fYnJvd3Nlcl9wbGF0Zm9ybV9icm93c2VyX2wsYXBwSW5pdGlhbGl6ZXJGYWN0b3J5IGFzIMm1YW5ndWxhcl9wYWNrYWdlc19wbGF0Zm9ybV9icm93c2VyX3BsYXRmb3JtX2Jyb3dzZXJfa30gZnJvbSAnLi9zcmMvYnJvd3Nlci9zZXJ2ZXItdHJhbnNpdGlvbic7XG5leHBvcnQge2NyZWF0ZVRpdGxlIGFzIMm1YW5ndWxhcl9wYWNrYWdlc19wbGF0Zm9ybV9icm93c2VyX3BsYXRmb3JtX2Jyb3dzZXJfZX0gZnJvbSAnLi9zcmMvYnJvd3Nlci90aXRsZSc7XG5leHBvcnQge2luaXRUcmFuc2ZlclN0YXRlIGFzIMm1YW5ndWxhcl9wYWNrYWdlc19wbGF0Zm9ybV9icm93c2VyX3BsYXRmb3JtX2Jyb3dzZXJfZn0gZnJvbSAnLi9zcmMvYnJvd3Nlci90cmFuc2Zlcl9zdGF0ZSc7XG5leHBvcnQge0Jyb3dzZXJYaHIgYXMgybVhbmd1bGFyX3BhY2thZ2VzX3BsYXRmb3JtX2Jyb3dzZXJfcGxhdGZvcm1fYnJvd3Nlcl9vfSBmcm9tICcuL3NyYy9icm93c2VyL3hocic7XG5leHBvcnQge0VMRU1FTlRfUFJPQkVfUFJPVklERVJTX19QUkVfUjNfXyBhcyDJtWFuZ3VsYXJfcGFja2FnZXNfcGxhdGZvcm1fYnJvd3Nlcl9wbGF0Zm9ybV9icm93c2VyX24sX2NyZWF0ZU5nUHJvYmVSMiBhcyDJtWFuZ3VsYXJfcGFja2FnZXNfcGxhdGZvcm1fYnJvd3Nlcl9wbGF0Zm9ybV9icm93c2VyX219IGZyb20gJy4vc3JjL2RvbS9kZWJ1Zy9uZ19wcm9iZSc7XG5leHBvcnQge0V2ZW50TWFuYWdlclBsdWdpbiBhcyDJtWFuZ3VsYXJfcGFja2FnZXNfcGxhdGZvcm1fYnJvd3Nlcl9wbGF0Zm9ybV9icm93c2VyX2d9IGZyb20gJy4vc3JjL2RvbS9ldmVudHMvZXZlbnRfbWFuYWdlcic7XG5leHBvcnQge0hBTU1FUl9QUk9WSURFUlMgYXMgybVhbmd1bGFyX3BhY2thZ2VzX3BsYXRmb3JtX2Jyb3dzZXJfcGxhdGZvcm1fYnJvd3Nlcl9pLEhBTU1FUl9QUk9WSURFUlNfX1BSRV9SM19fIGFzIMm1YW5ndWxhcl9wYWNrYWdlc19wbGF0Zm9ybV9icm93c2VyX3BsYXRmb3JtX2Jyb3dzZXJfaH0gZnJvbSAnLi9zcmMvZG9tL2V2ZW50cy9oYW1tZXJfZ2VzdHVyZXMnO1xuZXhwb3J0IHtkb21TYW5pdGl6ZXJJbXBsRmFjdG9yeSBhcyDJtWFuZ3VsYXJfcGFja2FnZXNfcGxhdGZvcm1fYnJvd3Nlcl9wbGF0Zm9ybV9icm93c2VyX2p9IGZyb20gJy4vc3JjL3NlY3VyaXR5L2RvbV9zYW5pdGl6YXRpb25fc2VydmljZSc7Il19