{"version":3,"file":"perfect-scrollbar.directive.d.ts","sources":["perfect-scrollbar.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import PerfectScrollbar from 'perfect-scrollbar';\nimport { NgZone, ElementRef, OnInit, DoCheck, OnChanges, OnDestroy, EventEmitter, SimpleChanges, KeyValueDiffers } from '@angular/core';\nimport { Geometry, Position } from './perfect-scrollbar.interfaces';\nimport { PerfectScrollbarConfigInterface } from './perfect-scrollbar.interfaces';\nexport declare class PerfectScrollbarDirective implements OnInit, OnDestroy, DoCheck, OnChanges {\n    private zone;\n    private differs;\n    elementRef: ElementRef;\n    private platformId;\n    private defaults;\n    private instance;\n    private ro;\n    private timeout;\n    private animation;\n    private configDiff;\n    private readonly ngDestroy;\n    disabled: boolean;\n    config?: PerfectScrollbarConfigInterface;\n    psScrollY: EventEmitter<any>;\n    psScrollX: EventEmitter<any>;\n    psScrollUp: EventEmitter<any>;\n    psScrollDown: EventEmitter<any>;\n    psScrollLeft: EventEmitter<any>;\n    psScrollRight: EventEmitter<any>;\n    psYReachEnd: EventEmitter<any>;\n    psYReachStart: EventEmitter<any>;\n    psXReachEnd: EventEmitter<any>;\n    psXReachStart: EventEmitter<any>;\n    constructor(zone: NgZone, differs: KeyValueDiffers, elementRef: ElementRef, platformId: Object, defaults: PerfectScrollbarConfigInterface);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngDoCheck(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ps(): PerfectScrollbar | null;\n    update(): void;\n    geometry(prefix?: string): Geometry;\n    position(absolute?: boolean): Position;\n    scrollable(direction?: string): boolean;\n    scrollTo(x: number, y?: number, speed?: number): void;\n    scrollToX(x: number, speed?: number): void;\n    scrollToY(y: number, speed?: number): void;\n    scrollToTop(offset?: number, speed?: number): void;\n    scrollToLeft(offset?: number, speed?: number): void;\n    scrollToRight(offset?: number, speed?: number): void;\n    scrollToBottom(offset?: number, speed?: number): void;\n    scrollToElement(qs: string, offset?: number, speed?: number): void;\n    private animateScrolling;\n}\n"]}