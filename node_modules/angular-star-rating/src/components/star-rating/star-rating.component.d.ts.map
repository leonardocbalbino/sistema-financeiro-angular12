{"version":3,"file":"star-rating.component.d.ts","sources":["star-rating.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { ClickEvent } from '../../interfaces/click-event.interface';\r\nimport { HoverRatingChangeEvent } from '../../interfaces/hover-rating-change-event.interface';\r\nimport { RatingChangeEvent } from '../../interfaces/rating-change-event.interface';\r\nimport { StarRating } from '../../services/star-rating';\r\nimport { StarRatingConfigService } from '../../services/star-rating-config.service';\r\nexport declare class StarRatingComponent extends StarRating {\r\n    starClickChange: EventEmitter<ClickEvent>;\r\n    ratingChange: EventEmitter<RatingChangeEvent>;\r\n    hoverRatingChange: EventEmitter<HoverRatingChangeEvent>;\r\n    saveOnClick($event: ClickEvent): void;\r\n    saveOnRatingChange($event: RatingChangeEvent): void;\r\n    saveOnHover($event: HoverRatingChangeEvent): void;\r\n    /**ACCESSIBILITY **/\r\n    onKeyDown(event: KeyboardEvent): void;\r\n    onStarHover(rating?: number): void;\r\n    constructor(config: StarRatingConfigService);\r\n    setRating(value: number): void;\r\n    /**\r\n     * onStarClicked\r\n     *\r\n     * Is fired when a star is clicked. And updated the rating value.\r\n     * This function returns if the disabled or readOnly\r\n     * property is set. If provided it emits the onClick event\r\n     * handler with the actual rating value.\r\n     *\r\n     * @param rating\r\n     */\r\n    onStarClicked(rating: number): void;\r\n}\r\n"]}