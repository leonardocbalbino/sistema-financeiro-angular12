{"version":3,"file":"angular-star-rating.js","sources":["angular-star-rating/out/src/interfaces/star-rating-config.interface.ts","angular-star-rating/out/src/services/star-rating.utils.ts","angular-star-rating/out/src/services/star-rating.ts","angular-star-rating/out/src/services/star-rating-config.service.ts","angular-star-rating/out/src/components/star-rating/star-rating.component.ts","angular-star-rating/out/src/components/star-rating-control/star-rating-control.component.ts","angular-star-rating/out/src/angular-star-rating.module.ts"],"names":["tslib_1.__extends"],"mappings":"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","sourcesContent":["export type starRatingSizes = 'small' | 'medium' | 'large';\r\nexport type starRatingColor = 'default' | 'negative' | 'ok' | 'positive';\r\nexport type starRatingSpeed = 'immediately' | 'noticeable' | 'slow';\r\nexport type starRatingLabelPosition = 'left' | 'right' | 'top' | 'bottom';\r\nexport type starRatingStarTypes = 'svg' | 'icon' | 'custom-icon';\r\nexport type starRatingStarSpace = 'no' | 'between' | 'around';\r\nexport type starRatingDirection = 'rtl' | 'ltr';\r\n\r\nexport class StarRatingConfig {\r\n  // binding defaults\r\n  numOfStars?: number;\r\n  size?: starRatingSizes;\r\n  speed?: starRatingSpeed;\r\n  labelPosition?: starRatingLabelPosition;\r\n  starType?: starRatingStarTypes;\r\n  staticColor: starRatingColor;\r\n  getColor?: (\r\n    rating: number,\r\n    numOfStars: number,\r\n    staticColor?: starRatingColor\r\n  ) => starRatingColor;\r\n  getHalfStarVisible?: (rating: number) => boolean;\r\n  // statics\r\n  classEmpty?: string;\r\n  classHalf?: string;\r\n  classFilled?: string;\r\n  assetsPath?: string;\r\n  svgPath?: string;\r\n  svgEmptySymbolId?: string;\r\n  svgHalfSymbolId?: string;\r\n  svgFilledSymbolId?: string;\r\n  svgPathEmpty?: string;\r\n  svgPathHalf?: string;\r\n  svgPathFilled?: string;\r\n}\r\n","import { starRatingColor } from '../interfaces/star-rating-config.interface';\r\nexport class StarRatingUtils {\r\n  //Static methods\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  /*\r\n     * getStarsArray\r\n     *\r\n     * returns an array of increasing numbers starting at 1\r\n     *\r\n     * @param numOfStars\r\n     * @returns {Array}\r\n     */\r\n  static getStarsArray(numOfStars: number): Array<number> {\r\n    let stars: Array<number> = [];\r\n    for (let i = 0; i < numOfStars; i++) {\r\n      stars.push(i + 1);\r\n    }\r\n    return stars;\r\n  }\r\n\r\n  /*\r\n     * getHalfStarVisible\r\n     *\r\n     * Returns true if there should be a half star visible, and false if not.\r\n     *\r\n     * @param rating\r\n     * @returns {boolean}\r\n     */\r\n  static getHalfStarVisible(rating: number): boolean {\r\n    return Math.abs(rating % 1) > 0;\r\n  }\r\n\r\n  /*\r\n     * getColor\r\n     *\r\n     * The default function for color calculation\r\n     * based on the current rating and the the number of stars possible.\r\n     * If a staticColor is set the function will use it as return value.\r\n     *\r\n     * @param rating\r\n     * @param numOfStars\r\n     * @param staticColor\r\n     * @returns {starRatingColor}\r\n     */\r\n  static getColor(\r\n    rating: number,\r\n    numOfStars: number,\r\n    staticColor?: starRatingColor\r\n  ): starRatingColor {\r\n    rating = rating || 0;\r\n\r\n    //if a fix color is set use this one\r\n    if (staticColor) {\r\n      return staticColor;\r\n    }\r\n\r\n    //calculate size of smallest fraction\r\n    let fractionSize = numOfStars / 3;\r\n\r\n    //apply color by fraction\r\n    let color: starRatingColor = 'default';\r\n    if (rating > 0) {\r\n      color = 'negative';\r\n    }\r\n    if (rating > fractionSize) {\r\n      color = 'ok';\r\n    }\r\n    if (rating > fractionSize * 2) {\r\n      color = 'positive';\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  /*\r\n     * isDigitKeyEventCode\r\n     * detects digit key event sodes\r\n     * @param eventCode\r\n     * @returns {boolean}\r\n     */\r\n  static isDigitKeyEventCode(eventCode: string): boolean {\r\n    return eventCode.indexOf('Digit') === 0;\r\n  }\r\n}\r\n","import {\r\n  StarRatingConfig,\r\n  starRatingColor,\r\n  starRatingDirection,\r\n  starRatingLabelPosition,\r\n  starRatingSizes,\r\n  starRatingSpeed,\r\n  starRatingStarSpace,\r\n  starRatingStarTypes\r\n} from '../interfaces/star-rating-config.interface';\r\nimport { StarRatingConfigService } from './star-rating-config.service';\r\nimport { StarRatingUtils } from './star-rating.utils';\r\n\r\nexport class StarRating {\r\n  protected config: StarRatingConfig;\r\n\r\n  //CTRL ONLY\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n  classEmpty: string;\r\n  classHalf: string;\r\n  classFilled: string;\r\n\r\n  pathEmpty: string;\r\n  pathHalf: string;\r\n  pathFilled: string;\r\n\r\n  color: starRatingColor;\r\n  stars: Array<number>;\r\n  ratingAsInteger: number;\r\n  halfStarVisible: boolean;\r\n\r\n  /////////////////////////////////////////////\r\n\r\n\r\n  set rating(value: number) {\r\n    this.setRating(value);\r\n  }\r\n\r\n  /**\r\n   * showHalfStars\r\n   */\r\n  protected _showHalfStars: boolean;\r\n  get showHalfStars(): boolean {\r\n    return this._showHalfStars;\r\n  }\r\n\r\n  set showHalfStars(value: boolean) {\r\n    this._showHalfStars = !!value;\r\n\r\n    //update halfStarVisible\r\n    this.setHalfStarVisible();\r\n  }\r\n\r\n  /**\r\n   * getColor\r\n   */\r\n  getColor: (\r\n    rating: number,\r\n    numOfStars: number,\r\n    staticColor?: starRatingColor\r\n  ) => starRatingColor;\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * getHalfStarVisible\r\n   */\r\n  getHalfStarVisible: (rating: number) => boolean;\r\n  /////////////////////////////////////////////\r\n\r\n  //Inputs\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  /**\r\n   * id property to identify the DOM element\r\n   */\r\n  protected _id: string;\r\n  get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value: string) {\r\n    this._id = value || '';\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * focus\r\n   */\r\n  protected _focus: boolean;\r\n  get focus(): boolean {\r\n    return this._focus;\r\n  }\r\n\r\n  set focus(value: boolean) {\r\n    this._focus = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * labelText\r\n   */\r\n  protected _labelText: string;\r\n  get labelText(): string {\r\n    return this._labelText;\r\n  }\r\n\r\n  set labelText(value: string) {\r\n    this._labelText = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * labelPosition\r\n   */\r\n  protected _labelPosition: starRatingLabelPosition;\r\n  get labelPosition(): starRatingLabelPosition {\r\n    return this._labelPosition;\r\n  }\r\n\r\n  set labelPosition(value: starRatingLabelPosition) {\r\n    this._labelPosition = value || this.config.labelPosition;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * labelVisible\r\n   */\r\n  protected _labelVisible: boolean;\r\n  get labelVisible(): boolean {\r\n    return this._labelVisible;\r\n  }\r\n\r\n  set labelVisible(value: boolean) {\r\n    this._labelVisible = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * hoverEnabled\r\n   */\r\n  protected _hoverEnabled: boolean;\r\n  get hoverEnabled(): boolean {\r\n    return this._hoverEnabled;\r\n  }\r\n\r\n  set hoverEnabled(value: boolean) {\r\n    this._hoverEnabled = value !== undefined ? !!value : false;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * staticColor\r\n   */\r\n  protected _staticColor: starRatingColor;\r\n  get staticColor(): starRatingColor {\r\n    return this._staticColor || this.config.staticColor || undefined;\r\n  }\r\n\r\n  set staticColor(value: starRatingColor) {\r\n    this._staticColor = value;\r\n\r\n    //update color.\r\n    this.setColor();\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * direction\r\n   */\r\n  protected _direction: starRatingDirection;\r\n  get direction(): starRatingDirection {\r\n    return this._direction;\r\n  }\r\n\r\n  set direction(value: starRatingDirection) {\r\n    this._direction = value || undefined;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * numOfStars\r\n   */\r\n  protected _numOfStars: number;\r\n  get numOfStars(): number {\r\n    return this._numOfStars;\r\n  }\r\n\r\n  set numOfStars(value: number) {\r\n    this._numOfStars = value > 0 ? value : this.config.numOfStars;\r\n\r\n    //update stars array\r\n    this.stars = StarRatingUtils.getStarsArray(this.numOfStars);\r\n\r\n    //update color\r\n    this.setColor();\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * hoverRating\r\n   */\r\n  protected _hoverRating: number;\r\n  get hoverRating(): number {\r\n    return this._hoverRating;\r\n  }\r\n\r\n  set hoverRating(value: number) {\r\n    this._hoverRating = value > 0 ? value : 0;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * speed\r\n   */\r\n  protected _speed: starRatingSpeed;\r\n  get speed(): starRatingSpeed {\r\n    return this._speed;\r\n  }\r\n\r\n  set speed(value: starRatingSpeed) {\r\n    this._speed = value || this.config.speed;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * size\r\n   */\r\n  protected _size: starRatingSizes;\r\n  get size(): starRatingSizes {\r\n    return this._size || this.config.size;\r\n  }\r\n\r\n  set size(value: starRatingSizes) {\r\n    this._size = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * starType\r\n   */\r\n  protected _starType: starRatingStarTypes;\r\n  get starType(): starRatingStarTypes {\r\n    return this._starType || this.config.starType;\r\n  }\r\n\r\n  set starType(value: starRatingStarTypes) {\r\n    this._starType = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * space\r\n   */\r\n  protected _space: starRatingStarSpace;\r\n  get space(): starRatingStarSpace {\r\n    return this._space;\r\n  }\r\n\r\n  set space(value: starRatingStarSpace) {\r\n    this._space = value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * readOnly\r\n   */\r\n  protected _readOnly: boolean;\r\n  get readOnly(): boolean {\r\n    return this._readOnly;\r\n  }\r\n\r\n  set readOnly(value: boolean) {\r\n    this._readOnly = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * disabled\r\n   */\r\n  protected _disabled: boolean;\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  set disabled(value: boolean) {\r\n    this._disabled = !!value;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  private _step: number;\r\n  get step(): number {\r\n    return this._step;\r\n  }\r\n\r\n  set step(value: number) {\r\n    this._step = value > 0 ? value : 1;\r\n  }\r\n\r\n  /////////////////////////////////////////////\r\n\r\n  /**\r\n   * rating\r\n   */\r\n  protected _rating: number;\r\n  get rating(): number {\r\n    return this._rating;\r\n  }\r\n\r\n  /**\r\n   * setRating\r\n   * I use a setter function instead of a set method to enable overrides for this function.\r\n   * @param value\r\n   */\r\n  setRating(value: number) {\r\n    //validate and apply newRating\r\n    let newRating = 0;\r\n    if (value >= 0 && value <= this.numOfStars) {\r\n      newRating = value;\r\n    }\r\n\r\n    //limit max value to max number of stars\r\n    if (value > this.numOfStars) {\r\n      newRating = this.numOfStars;\r\n    }\r\n    this._rating = newRating;\r\n\r\n    //update ratingAsInteger. rating parsed to int for the value-[n] modifier\r\n    this.ratingAsInteger = parseInt(this._rating.toString(), 10);\r\n\r\n    //update halfStarsVisible\r\n    this.setHalfStarVisible();\r\n\r\n    //update calculated Color\r\n    this.setColor();\r\n  }\r\n\r\n  constructor(config: StarRatingConfigService) {\r\n    this.config = config;\r\n\r\n    //set default ctrl props\r\n    this.classEmpty = this.config.classEmpty;\r\n    this.classHalf = this.config.classHalf;\r\n    this.classFilled = this.config.classFilled;\r\n    this.pathEmpty = this.config.svgPathEmpty;\r\n    this.pathHalf = this.config.svgPathHalf;\r\n    this.pathFilled = this.config.svgPathFilled;\r\n\r\n    //set default Component Inputs\r\n    if (\r\n      'getColor' in this.config &&\r\n      typeof this.config.getColor === 'function'\r\n    ) {\r\n      this.getColor = this.config.getColor;\r\n    }\r\n\r\n    if (\r\n      'getHalfStarVisible' in this.config &&\r\n      typeof this.config.getHalfStarVisible === 'function'\r\n    ) {\r\n      this.getHalfStarVisible = this.config.getHalfStarVisible;\r\n    }\r\n\r\n    this.numOfStars = this.config.numOfStars;\r\n    this.rating = 0;\r\n    this.step = 1;\r\n  }\r\n\r\n  svgVisible(): boolean {\r\n    return this.starType === 'svg';\r\n  }\r\n\r\n  interactionPossible(): boolean {\r\n    return !this.readOnly && !this.disabled;\r\n  }\r\n\r\n  setColor(useHoverValue = false): void {\r\n    //check if custom function is given\r\n    const ratingValue = useHoverValue ? this.hoverRating: this.rating;\r\n    if (typeof this.getColor === 'function') {\r\n      this.color = this.getColor(\r\n        ratingValue,\r\n        this.numOfStars,\r\n        this.staticColor\r\n      );\r\n    } else {\r\n      this.color = StarRatingUtils.getColor(\r\n        ratingValue,\r\n        this.numOfStars,\r\n        this.staticColor\r\n      );\r\n    }\r\n  }\r\n\r\n  setHalfStarVisible(): void {\r\n    //update halfStarVisible\r\n    if (this.showHalfStars) {\r\n      //check if custom function is given\r\n      if (typeof this.getHalfStarVisible === 'function') {\r\n        this.halfStarVisible = this.getHalfStarVisible(this.rating);\r\n      } else {\r\n        this.halfStarVisible = StarRatingUtils.getHalfStarVisible(this.rating);\r\n      }\r\n    } else {\r\n      this.halfStarVisible = false;\r\n    }\r\n  }\r\n\r\n  getComponentClassNames(): string {\r\n    const classNames: string[] = [];\r\n\r\n    classNames.push(this.rating ? 'value-' + this.ratingAsInteger : 'value-0');\r\n    classNames.push(this.halfStarVisible ? 'half' : '');\r\n    classNames.push(this.hoverEnabled ? 'hover' : '');\r\n\r\n    const hoverRating = this.hoverRating\r\n      ? 'hover-' + this.hoverRating\r\n      : 'hover-0';\r\n    classNames.push(this.hoverEnabled ? hoverRating : '');\r\n\r\n    classNames.push(this.space ? 'space-' + this.space : '');\r\n    classNames.push(this.labelPosition ? 'label-' + this.labelPosition : '');\r\n    classNames.push(this.color ? 'color-' + this.color : '');\r\n    classNames.push(this.starType ? 'star-' + this.starType : '');\r\n    classNames.push(this.speed);\r\n    classNames.push(this.size);\r\n    classNames.push(this.readOnly ? 'read-only' : '');\r\n    classNames.push(this.disabled ? 'disabled' : '');\r\n    classNames.push(this.direction ? 'direction-' + this.direction : '');\r\n\r\n    return classNames.join(' ');\r\n  }\r\n\r\n  increment() {\r\n    //increment to next higher step\r\n    const absDiff = Math.abs(this.rating % this.step);\r\n    this.rating = this.rating + (absDiff > 0 ? this.step - absDiff : this.step);\r\n  }\r\n\r\n  decrement() {\r\n    //decrement to next lower step\r\n    const absDiff = Math.abs(this.rating % this.step);\r\n    this.rating = this.rating - (absDiff > 0 ? absDiff : this.step);\r\n  }\r\n\r\n  reset() {\r\n    this.rating = 0;\r\n  }\r\n}\r\n","import {\r\n  StarRatingConfig,\r\n  starRatingColor,\r\n  starRatingSizes,\r\n  starRatingSpeed,\r\n  starRatingStarTypes,\r\n  starRatingLabelPosition\r\n} from '../interfaces/star-rating-config.interface';\r\n\r\n/**\r\n * Configuration service for the StarRating component.\r\n * You can inject this service, typically in your root component, and customize the values of its properties in\r\n * order to provide default values for all the star ratings used in the application.\r\n */\r\nexport class StarRatingConfigService implements StarRatingConfig {\r\n  _classEmpty = 'default-star-empty-icon';\r\n\r\n  get classEmpty() {\r\n    return this._classEmpty;\r\n  }\r\n\r\n  set classEmpty(classEmpty: string) {\r\n    this._classEmpty = classEmpty;\r\n  }\r\n\r\n  private _classHalf = 'default-star-half-icon';\r\n\r\n  get classHalf(): string {\r\n    return this._classHalf;\r\n  }\r\n\r\n  set classHalf(classHalf: string) {\r\n    this._classHalf = classHalf;\r\n  }\r\n\r\n  private _classFilled = 'default-star-filled-icon';\r\n\r\n  get classFilled(): string {\r\n    return this._classFilled;\r\n  }\r\n\r\n  set classFilled(classFilled: string) {\r\n    this._classFilled = classFilled;\r\n  }\r\n\r\n  private _numOfStars = 5;\r\n\r\n  get numOfStars(): number {\r\n    return this._numOfStars;\r\n  }\r\n\r\n  set numOfStars(numOfStars: number) {\r\n    this._numOfStars = numOfStars;\r\n  }\r\n\r\n  private _size: starRatingSizes = 'medium';\r\n\r\n  get size(): starRatingSizes {\r\n    return this._size;\r\n  }\r\n\r\n  set size(size: starRatingSizes) {\r\n    this._size = size;\r\n  }\r\n\r\n  private _staticColor: starRatingColor;\r\n\r\n  get staticColor(): starRatingColor {\r\n    return this._staticColor;\r\n  }\r\n\r\n  set staticColor(value: starRatingColor) {\r\n    this._staticColor = value;\r\n  }\r\n\r\n  private _labelPosition: starRatingLabelPosition = 'left';\r\n\r\n  get labelPosition(): starRatingLabelPosition {\r\n    return this._labelPosition;\r\n  }\r\n\r\n  set labelPosition(labelPosition: starRatingLabelPosition) {\r\n    this._labelPosition = labelPosition;\r\n  }\r\n\r\n  private _speed: starRatingSpeed = 'noticeable';\r\n\r\n  get speed(): starRatingSpeed {\r\n    return this._speed;\r\n  }\r\n\r\n  set speed(speed: starRatingSpeed) {\r\n    this._speed = speed;\r\n  }\r\n\r\n  private _starType: starRatingStarTypes = 'svg';\r\n\r\n  get starType(): starRatingStarTypes {\r\n    return this._starType;\r\n  }\r\n\r\n  set starType(starType: starRatingStarTypes) {\r\n    this._starType = starType;\r\n  }\r\n\r\n  private _assetsPath = 'assets/images/';\r\n\r\n  get assetsPath(): string {\r\n    return this._assetsPath;\r\n  }\r\n\r\n  set assetsPath(assetsPath: string) {\r\n    this._assetsPath = assetsPath;\r\n  }\r\n\r\n  private _svgPath = this.assetsPath + 'star-rating.icons.svg';\r\n\r\n  get svgPath(): string {\r\n    return this._svgPath;\r\n  }\r\n\r\n  set svgPath(svgPath: string) {\r\n    this._svgPath = svgPath;\r\n  }\r\n\r\n  private _svgEmptySymbolId = 'star-empty';\r\n\r\n  get svgEmptySymbolId(): string {\r\n    return this._svgEmptySymbolId;\r\n  }\r\n\r\n  set svgEmptySymbolId(svgEmptySymbolId: string) {\r\n    this._svgEmptySymbolId = svgEmptySymbolId;\r\n  }\r\n\r\n  private _svgHalfSymbolId = 'star-half';\r\n\r\n  get svgHalfSymbolId(): string {\r\n    return this._svgHalfSymbolId;\r\n  }\r\n\r\n  set svgHalfSymbolId(svgHalfSymbolId: string) {\r\n    this._svgHalfSymbolId = svgHalfSymbolId;\r\n  }\r\n\r\n  private _svgFilledSymbolId = 'star-filled';\r\n\r\n  get svgFilledSymbolId(): string {\r\n    return this._svgFilledSymbolId;\r\n  }\r\n\r\n  set svgFilledSymbolId(svgFilledSymbolId: string) {\r\n    this._svgFilledSymbolId = svgFilledSymbolId;\r\n  }\r\n\r\n  private _svgPathEmpty: string = this.svgPath + '#' + this.svgEmptySymbolId;\r\n\r\n  get svgPathEmpty(): string {\r\n    return this._svgPathEmpty;\r\n  }\r\n\r\n  set svgPathEmpty(svgPathEmpty: string) {\r\n    this._svgPathEmpty = svgPathEmpty;\r\n  }\r\n\r\n  private _svgPathHalf: string = this.svgPath + '#' + this.svgHalfSymbolId;\r\n\r\n  get svgPathHalf(): string {\r\n    return this._svgPathHalf;\r\n  }\r\n\r\n  set svgPathHalf(svgPathHalf: string) {\r\n    this._svgPathHalf = svgPathHalf;\r\n  }\r\n\r\n  private _svgPathFilled: string = this.svgPath + '#' + this.svgFilledSymbolId;\r\n\r\n  get svgPathFilled(): string {\r\n    return this._svgPathFilled;\r\n  }\r\n\r\n  set svgPathFilled(svgPathFilled: string) {\r\n    this._svgPathFilled = svgPathFilled;\r\n  }\r\n\r\n  getColor(\r\n    rating: number,\r\n    numOfStars: number,\r\n    staticColor?: starRatingColor\r\n  ): starRatingColor {\r\n    rating = rating || 0;\r\n\r\n    // if a fix color is set use this one\r\n    if (staticColor) {\r\n      return staticColor;\r\n    }\r\n\r\n    // calculate size of smallest fraction\r\n    const fractionSize = numOfStars / 3;\r\n\r\n    // apply color by fraction\r\n    let color: starRatingColor = 'default';\r\n    if (rating > 0) {\r\n      color = 'negative';\r\n    }\r\n    if (rating > fractionSize) {\r\n      color = 'ok';\r\n    }\r\n    if (rating > fractionSize * 2) {\r\n      color = 'positive';\r\n    }\r\n\r\n    return color;\r\n  }\r\n\r\n  getHalfStarVisible(rating: number): boolean {\r\n    return Math.abs(rating % 1) > 0;\r\n  }\r\n}\r\n","import {Component, EventEmitter} from '@angular/core';\r\nimport {ClickEvent} from '../../interfaces/click-event.interface';\r\nimport {HoverRatingChangeEvent} from '../../interfaces/hover-rating-change-event.interface';\r\nimport {RatingChangeEvent} from '../../interfaces/rating-change-event.interface';\r\nimport {StarRating} from '../../services/star-rating';\r\nimport {StarRatingConfigService} from '../../services/star-rating-config.service';\r\nimport {StarRatingUtils} from '../../services/star-rating.utils';\r\n\r\n@Component({\r\n  selector: 'star-rating',\r\n  inputs: [\r\n    'getHalfStarVisible',\r\n    'getColor',\r\n    'showHalfStars',\r\n    'hoverEnabled',\r\n    'rating',\r\n    'step',\r\n    'disabled',\r\n    'readOnly',\r\n    'space',\r\n    'starType',\r\n    'size',\r\n    'speed',\r\n    'numOfStars',\r\n    'direction',\r\n    'staticColor',\r\n    //, 'labelVisible'\r\n    'labelPosition',\r\n    'labelText',\r\n    'id'\r\n  ],\r\n  outputs: ['starClickChange', 'ratingChange', 'hoverRatingChange'],\r\n  styles: [],\r\n  template: `<div id=\"{{id}}\"\r\n  class=\"rating {{getComponentClassNames()}}\"\r\n  tabindex=\"0\"\r\n  (keydown)=\"onKeyDown($event)\"\r\n  (mouseleave)=\"onStarHover(0)\">\r\n    <div *ngIf=\"labelText\" class=\"label-value\">{{labelText}}</div>\r\n    <div class=\"star-container\">\r\n        <div class=\"star\"\r\n          (mouseenter)=\"onStarHover(star)\"\r\n          *ngFor=\"let star of stars\"\r\n          (click)=\"onStarClicked(star)\">\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-empty {{classEmpty}}\"></i>\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-half {{classHalf}}\"></i>\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-filled {{classFilled}}\"></i>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-empty\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathEmpty\"></use>\r\n            </svg>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-half\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathHalf\"></use>\r\n            </svg>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-filled\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathFilled\"></use>\r\n            </svg>\r\n        </div>\r\n    </div>\r\n</div>\r\n`\r\n})\r\nexport class StarRatingComponent extends StarRating {\r\n  //Outputs\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  starClickChange: EventEmitter<ClickEvent> = new EventEmitter<ClickEvent>();\r\n\r\n  ratingChange: EventEmitter<RatingChangeEvent> = new EventEmitter<\r\n    RatingChangeEvent\r\n  >();\r\n\r\n  hoverRatingChange: EventEmitter<HoverRatingChangeEvent> = new EventEmitter<\r\n    HoverRatingChangeEvent\r\n  >();\r\n\r\n  saveOnClick($event: ClickEvent) {\r\n    if (this.starClickChange) {\r\n      this.starClickChange.emit($event);\r\n    }\r\n  }\r\n\r\n  saveOnRatingChange($event: RatingChangeEvent) {\r\n    if (this.ratingChange) {\r\n      this.ratingChange.emit($event);\r\n    }\r\n  }\r\n\r\n  saveOnHover($event: HoverRatingChangeEvent) {\r\n    if (this.hoverRatingChange) {\r\n      this.hoverRatingChange.emit($event);\r\n    }\r\n  }\r\n\r\n  /**ACCESSIBILITY **/\r\n\r\n  //Keyboard events\r\n  onKeyDown(event: KeyboardEvent) {\r\n    if (!this.interactionPossible()) {\r\n      return;\r\n    }\r\n\r\n    const handlers: any = {\r\n      //Decrement\r\n      Minus: () => this.decrement(),\r\n      ArrowDown: () => this.decrement(),\r\n      ArrowLeft: () => this.decrement(),\r\n\r\n      //Increment\r\n      Plus: () => this.increment(),\r\n      ArrowRight: () => this.increment(),\r\n      ArrowUp: () => this.increment(),\r\n\r\n      //Reset\r\n      Backspace: () => this.reset(),\r\n      Delete: () => this.reset(),\r\n      Digit0: () => this.reset()\r\n    };\r\n\r\n    const handleDigits = (eventCode: string): void => {\r\n      const dStr = 'Digit';\r\n      const digit: number = parseInt(\r\n        eventCode.substr(dStr.length, eventCode.length - 1), 10\r\n      );\r\n      this.rating = digit;\r\n    };\r\n\r\n    if (\r\n      handlers[event['code']] ||\r\n      StarRatingUtils.isDigitKeyEventCode(event['code'])\r\n    ) {\r\n      if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\r\n        handleDigits(event['code']);\r\n      } else {\r\n        handlers[event['code']]();\r\n      }\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n  }\r\n\r\n  //Hover events\r\n  onStarHover(rating?: number): void {\r\n    if (!this.interactionPossible() || !this.hoverEnabled) {\r\n      return;\r\n    }\r\n\r\n    this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\r\n    //update calculated Color\r\n    this.setColor(true);\r\n\r\n    //fire onHoverRatingChange event\r\n    const $event: HoverRatingChangeEvent = { hoverRating: this.hoverRating };\r\n    this.saveOnHover($event);\r\n  }\r\n\r\n  constructor(config: StarRatingConfigService) {\r\n    super(config);\r\n  }\r\n\r\n  //Overrides\r\n  setRating(value: number): void {\r\n    const initValue = this.rating;\r\n    super.setRating(value);\r\n\r\n    //if value changed trigger valueAccessor events and outputs\r\n    if (initValue !== this.rating) {\r\n      const $event: RatingChangeEvent = { rating: this.rating };\r\n      this.saveOnRatingChange($event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onStarClicked\r\n   *\r\n   * Is fired when a star is clicked. And updated the rating value.\r\n   * This function returns if the disabled or readOnly\r\n   * property is set. If provided it emits the onClick event\r\n   * handler with the actual rating value.\r\n   *\r\n   * @param rating\r\n   */\r\n  onStarClicked(rating: number): void {\r\n    //fire onClick event\r\n    if (!this.interactionPossible()) {\r\n      return;\r\n    }\r\n\r\n    this.rating = rating;\r\n\r\n    const onClickEventObject: ClickEvent = {\r\n      rating: this.rating\r\n    };\r\n    this.saveOnClick(onClickEventObject);\r\n  }\r\n}\r\n","import {Component, EventEmitter, forwardRef} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {ClickEvent} from '../../interfaces/click-event.interface';\r\nimport {HoverRatingChangeEvent} from '../../interfaces/hover-rating-change-event.interface';\r\nimport {RatingChangeEvent} from '../../interfaces/rating-change-event.interface';\r\nimport {StarRating} from '../../services/star-rating';\r\nimport {StarRatingConfigService} from '../../services/star-rating-config.service';\r\nimport {StarRatingUtils} from '../../services/star-rating.utils';\r\n\r\nconst STAR_RATING_CONTROL_ACCESSOR = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => StarRatingControlComponent),\r\n  multi: true\r\n};\r\n\r\n@Component({\r\n  selector: 'star-rating-control',\r\n  providers: [STAR_RATING_CONTROL_ACCESSOR],\r\n  inputs: [\r\n    'getHalfStarVisible',\r\n    'getColor',\r\n    'showHalfStars',\r\n    'hoverEnabled',\r\n    'rating',\r\n    'step',\r\n    'disabled',\r\n    'readOnly',\r\n    'space',\r\n    'starType',\r\n    'size',\r\n    'speed',\r\n    'numOfStars',\r\n    'direction',\r\n    'staticColor',\r\n    //, 'labelVisible'\r\n    'labelPosition',\r\n    'labelText',\r\n    'id'\r\n  ],\r\n  outputs: ['starClickChange', 'ratingChange', 'hoverRatingChange'],\r\n  styles: [],\r\n  template: `<div id=\"{{id}}\"\r\n  class=\"rating {{getComponentClassNames()}}\"\r\n  tabindex=\"0\"\r\n  (keydown)=\"onKeyDown($event)\"\r\n  (blur)=\"onBlur($event)\"\r\n  (focus)=\"onFocus($event)\"\r\n  (mouseleave)=\"onStarHover(0)\">\r\n    <div *ngIf=\"labelText\" class=\"label-value\">{{labelText}}</div>\r\n    <div class=\"star-container\">\r\n        <div class=\"star\"\r\n          (mouseenter)=\"onStarHover(star)\"\r\n          *ngFor=\"let star of stars\"\r\n          (click)=\"onStarClicked(star)\">\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-empty {{classEmpty}}\"></i>\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-half {{classHalf}}\"></i>\r\n            <i *ngIf=\"!svgVisible()\" class=\"star-filled {{classFilled}}\"></i>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-empty\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathEmpty\"></use>\r\n            </svg>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-half\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathHalf\"></use>\r\n            </svg>\r\n            <svg *ngIf=\"svgVisible()\" class=\"star-filled\">\r\n                <use xmlns:xlink=\"http://www.w3.org/1999/xlink\" [attr.xlink:href]=\"pathFilled\"></use>\r\n            </svg>\r\n        </div>\r\n    </div>\r\n</div>\r\n`\r\n})\r\nexport class StarRatingControlComponent extends StarRating\r\n  implements ControlValueAccessor {\r\n  //Outputs\r\n  ///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  starClickChange: EventEmitter<ClickEvent> = new EventEmitter<ClickEvent>();\r\n\r\n  ratingChange: EventEmitter<RatingChangeEvent> = new EventEmitter<\r\n    RatingChangeEvent\r\n  >();\r\n\r\n  hoverRatingChange: EventEmitter<HoverRatingChangeEvent> = new EventEmitter<\r\n    HoverRatingChangeEvent\r\n  >();\r\n\r\n  onTouch: Function;\r\n  onModelChange: Function;\r\n  private onModelChangeRegistered = false;\r\n  private onTouchRegistered = false;\r\n\r\n  saveOnClick($event: ClickEvent) {\r\n    if (this.starClickChange) {\r\n      this.starClickChange.emit($event);\r\n    }\r\n  }\r\n\r\n  saveOnRatingChange($event: RatingChangeEvent) {\r\n    if (this.ratingChange) {\r\n      this.ratingChange.emit($event);\r\n    }\r\n  }\r\n\r\n  saveOnHover($event: HoverRatingChangeEvent) {\r\n    if (this.hoverRatingChange) {\r\n      this.hoverRatingChange.emit($event);\r\n    }\r\n  }\r\n\r\n  saveOnTouch() {\r\n    if (this.onTouchRegistered) {\r\n      this.onTouch();\r\n    }\r\n  }\r\n\r\n  saveOnModelChange(value: number) {\r\n    if (this.onModelChangeRegistered) {\r\n      this.onModelChange(value);\r\n    }\r\n  }\r\n\r\n  /**ACCESSIBILITY **/\r\n\r\n  //Keyboard events\r\n  onKeyDown(event: KeyboardEvent) {\r\n    if (!this.interactionPossible()) {\r\n      return;\r\n    }\r\n\r\n    const handlers: any = {\r\n      //Decrement\r\n      Minus: () => this.decrement(),\r\n      ArrowDown: () => this.decrement(),\r\n      ArrowLeft: () => this.decrement(),\r\n\r\n      //Increment\r\n      Plus: () => this.increment(),\r\n      ArrowRight: () => this.increment(),\r\n      ArrowUp: () => this.increment(),\r\n\r\n      //Reset\r\n      Backspace: () => this.reset(),\r\n      Delete: () => this.reset(),\r\n      Digit0: () => this.reset()\r\n    };\r\n\r\n    const handleDigits = (eventCode: string): void => {\r\n      const dStr = 'Digit';\r\n      const digit: number = parseInt(\r\n        eventCode.substr(dStr.length, eventCode.length - 1), 10\r\n      );\r\n      this.rating = digit;\r\n    };\r\n\r\n    if (\r\n      handlers[event['code']] ||\r\n      StarRatingUtils.isDigitKeyEventCode(event['code'])\r\n    ) {\r\n      if (StarRatingUtils.isDigitKeyEventCode(event['code'])) {\r\n        handleDigits(event['code']);\r\n      } else {\r\n        handlers[event['code']]();\r\n      }\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    this.saveOnTouch();\r\n  }\r\n\r\n  //Focus events\r\n  onBlur(event: FocusEvent) {\r\n    this.focus = false;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.saveOnTouch();\r\n  }\r\n\r\n  onFocus(event: FocusEvent) {\r\n    this.focus = true;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.saveOnTouch();\r\n  }\r\n\r\n  //Hover events\r\n  onStarHover(rating?: number): void {\r\n    if (!this.interactionPossible() || !this.hoverEnabled) {\r\n      return;\r\n    }\r\n\r\n    this.hoverRating = rating ? parseInt(rating.toString(), 10) : 0;\r\n\r\n    //fire onHoverRatingChange event\r\n    const $event: HoverRatingChangeEvent = { hoverRating: this.hoverRating };\r\n    this.saveOnHover($event);\r\n  }\r\n\r\n  /**Form Control - ControlValueAccessor implementation**/\r\n\r\n  writeValue(obj: any): void {\r\n    this.rating = obj;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onModelChange = fn;\r\n    this.onModelChangeRegistered = true;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouch = fn;\r\n    this.onTouchRegistered = true;\r\n  }\r\n\r\n  constructor(config: StarRatingConfigService) {\r\n    super(config);\r\n  }\r\n\r\n  //Overrides\r\n  setRating(value: number): void {\r\n    const initValue = this.rating;\r\n    super.setRating(value);\r\n\r\n    //if value changed trigger valueAccessor events and outputs\r\n    if (initValue !== this.rating) {\r\n      const $event: RatingChangeEvent = { rating: this.rating };\r\n      this.saveOnRatingChange($event);\r\n\r\n      this.saveOnModelChange(this.rating);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onStarClicked\r\n   *\r\n   * Is fired when a star is clicked. And updated the rating value.\r\n   * This function returns if the disabled or readOnly\r\n   * property is set. If provided it emits the onClick event\r\n   * handler with the actual rating value.\r\n   *\r\n   * @param rating\r\n   */\r\n  onStarClicked(rating: number): void {\r\n    //fire onClick event\r\n    if (!this.interactionPossible()) {\r\n      return;\r\n    }\r\n\r\n    this.rating = rating;\r\n\r\n    const onClickEventObject: ClickEvent = {\r\n      rating: this.rating\r\n    };\r\n    this.saveOnClick(onClickEventObject);\r\n  }\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {StarRatingComponent} from './components/star-rating/star-rating.component';\r\nimport {StarRatingControlComponent} from './components/star-rating-control/star-rating-control.component';\r\nimport {StarRatingConfigService} from './services/star-rating-config.service';\r\n\r\nconst DECLARATIONS = [\r\n  StarRatingComponent,\r\n  StarRatingControlComponent\r\n];\r\nconst EXPORTS = [DECLARATIONS];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [DECLARATIONS],\r\n  exports: [EXPORTS]\r\n})\r\nexport class StarRatingModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: StarRatingModule,\r\n      providers: [\r\n        StarRatingConfigService\r\n      ]\r\n    };\r\n  }\r\n\r\n  static forChild(): ModuleWithProviders {\r\n    return {\r\n      ngModule: StarRatingModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}