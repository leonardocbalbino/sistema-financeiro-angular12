{"version":3,"file":"chart.component.d.ts","sources":["chart.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, OnInit, OnDestroy, SimpleChanges } from \"@angular/core\";\nimport { ApexAnnotations, ApexAxisChartSeries, ApexChart, ApexDataLabels, ApexFill, ApexGrid, ApexLegend, ApexNonAxisChartSeries, ApexMarkers, ApexNoData, ApexPlotOptions, ApexResponsive, ApexStates, ApexStroke, ApexTheme, ApexTitleSubtitle, ApexTooltip, ApexXAxis, ApexYAxis } from \"../model/apex-types\";\nexport declare class ChartComponent implements OnInit, OnChanges, OnDestroy {\n    chart: ApexChart;\n    annotations: ApexAnnotations;\n    colors: any[];\n    dataLabels: ApexDataLabels;\n    series: ApexAxisChartSeries | ApexNonAxisChartSeries;\n    stroke: ApexStroke;\n    labels: string[];\n    legend: ApexLegend;\n    markers: ApexMarkers;\n    noData: ApexNoData;\n    fill: ApexFill;\n    tooltip: ApexTooltip;\n    plotOptions: ApexPlotOptions;\n    responsive: ApexResponsive[];\n    xaxis: ApexXAxis;\n    yaxis: ApexYAxis | ApexYAxis[];\n    grid: ApexGrid;\n    states: ApexStates;\n    title: ApexTitleSubtitle;\n    subtitle: ApexTitleSubtitle;\n    theme: ApexTheme;\n    autoUpdateSeries: boolean;\n    private chartElement;\n    private chartObj;\n    ngOnInit(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    private createElement;\n    render(): Promise<void>;\n    updateOptions(options: any, redrawPaths?: boolean, animate?: boolean, updateSyncedCharts?: boolean): Promise<void>;\n    updateSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate?: boolean): void;\n    appendSeries(newSeries: ApexAxisChartSeries | ApexNonAxisChartSeries, animate?: boolean): void;\n    appendData(newData: any[]): void;\n    toggleSeries(seriesName: string): any;\n    showSeries(seriesName: string): void;\n    hideSeries(seriesName: string): void;\n    resetSeries(): void;\n    zoomX(min: number, max: number): void;\n    toggleDataPointSelection(seriesIndex: number, dataPointIndex?: number): void;\n    destroy(): void;\n    setLocale(localeName?: string): void;\n    paper(): void;\n    addXaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;\n    addYaxisAnnotation(options: any, pushToMemory?: boolean, context?: any): void;\n    addPointAnnotation(options: any, pushToMemory?: boolean, context?: any): void;\n    removeAnnotation(id: string, options?: any): void;\n    clearAnnotations(options?: any): void;\n    dataURI(): Promise<void>;\n}\n"]}