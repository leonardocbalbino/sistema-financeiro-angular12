{"version":3,"file":"custom-forms.module.d.ts","sources":["custom-forms.module.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA","sourcesContent":["import { AbstractControl, ValidatorFn } from '@angular/forms';\nexport declare const CustomValidators: {\n    arrayLength: (value: number) => ValidatorFn;\n    base64: ValidatorFn;\n    creditCard: ValidatorFn;\n    date: ValidatorFn;\n    dateISO: ValidatorFn;\n    digits: ValidatorFn;\n    email: ValidatorFn;\n    equal: (val: any) => ValidatorFn;\n    equalTo: (equalControl: AbstractControl) => ValidatorFn;\n    gt: (value: number) => ValidatorFn;\n    gte: (value: number) => ValidatorFn;\n    json: ValidatorFn;\n    lt: (value: number) => ValidatorFn;\n    lte: (value: number) => ValidatorFn;\n    max: (value: number) => ValidatorFn;\n    maxDate: (maxInput: any) => ValidatorFn;\n    min: (value: number) => ValidatorFn;\n    minDate: (minInput: any) => ValidatorFn;\n    notEqual: (val: any) => ValidatorFn;\n    notEqualTo: (notEqualControl: AbstractControl) => ValidatorFn;\n    number: ValidatorFn;\n    property: (value: string) => ValidatorFn;\n    range: (value: number[]) => ValidatorFn;\n    rangeLength: (value: number[]) => ValidatorFn;\n    url: ValidatorFn;\n    uuid: (version?: string) => ValidatorFn;\n};\nexport declare class CustomFormsModule {\n}\n"]}