{"version":3,"file":"ng2-dragula.umd.js.map","sources":["../../node_modules/tslib/tslib.es6.js","ng://ng2-dragula/Group.ts","ng://ng2-dragula/EventTypes.ts","ng://ng2-dragula/DrakeFactory.ts","ng://ng2-dragula/components/dragula.service.ts","ng://ng2-dragula/components/dragula.directive.ts","ng://ng2-dragula/components/dragula.module.ts","ng://ng2-dragula/MockDrake.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { DrakeWithModels } from \"./DrakeWithModels\";\nimport { DragulaOptions } from \"./DragulaOptions\";\n\nexport class Group {\n  public initEvents: boolean = false;\n  constructor(\n    public name: string,\n    public drake: DrakeWithModels,\n    public options: DragulaOptions\n  ) {}\n}\n","export enum EventTypes {\n    Cancel = \"cancel\",\n    Cloned = \"cloned\",\n    Drag = \"drag\",\n    DragEnd = \"dragend\",\n    Drop = \"drop\",\n    Out = \"out\",\n    Over = \"over\",\n    Remove = \"remove\",\n    Shadow = \"shadow\",\n    DropModel = \"dropModel\",\n    RemoveModel = \"removeModel\",\n}\n\nexport const AllEvents: EventTypes[] = Object.keys(EventTypes).map(k => EventTypes[k as any] as EventTypes);\n\n\n","import { DragulaOptions } from './DragulaOptions';\nimport { DrakeWithModels } from './DrakeWithModels';\nimport * as dragulaExpt from 'dragula';\nexport const dragula: (containers?: any, options?: any) => any = (dragulaExpt as any).default || dragulaExpt;\n\nexport type DrakeBuilder = (containers: any[], options: DragulaOptions) => DrakeWithModels;\n\nexport class DrakeFactory {\n  constructor (public build: DrakeBuilder = dragula) {}\n}\n\n","import { Injectable, Optional } from '@angular/core';\nimport { Group } from '../Group';\nimport { DragulaOptions } from '../DragulaOptions';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { EventTypes, AllEvents } from '../EventTypes';\nimport { DrakeFactory } from '../DrakeFactory';\n\ntype FilterProjector<T extends { name: string; }> = (name: string, args: any[]) => T;\ntype Dispatch = { event: EventTypes; name: string; args: any[]; };\n\nconst filterEvent = <T extends { name: string; }>(\n  eventType: EventTypes,\n  filterDragType: string | undefined,\n  projector: FilterProjector<T>\n) => (input: Observable<Dispatch>): Observable<T> => {\n  return input.pipe(\n    filter(({ event, name }) => {\n      return event === eventType\n          && (filterDragType === undefined || name === filterDragType);\n    }),\n    map(({ name, args }) => projector(name, args))\n  );\n}\n\nconst elContainerSourceProjector =\n  (name: string, [el, container, source]: [Element, Element, Element]) =>\n    ({ name, el, container, source });\n\n@Injectable()\nexport class DragulaService {\n\n  /* https://github.com/bevacqua/dragula#drakeon-events */\n\n  private dispatch$ = new Subject<Dispatch>();\n\n  public drag = (groupName?: string) => this.dispatch$.pipe(\n    filterEvent(\n      EventTypes.Drag,\n      groupName,\n      (name, [el, source]: [Element, Element]) => ({ name, el, source })\n    )\n  );\n\n  public dragend = (groupName?: string) => this.dispatch$.pipe(\n    filterEvent(\n      EventTypes.DragEnd,\n      groupName,\n      (name, [el]: [Element]) => ({ name, el })\n    )\n  );\n\n  public drop = (groupName?: string) => this.dispatch$.pipe(\n    filterEvent(\n      EventTypes.Drop,\n      groupName,\n      (name, [\n        el, target, source, sibling\n      ]: [Element, Element, Element, Element]) => {\n        return { name, el, target, source, sibling };\n      })\n  );\n\n  private elContainerSource =\n    (eventType: EventTypes) =>\n    (groupName?: string) =>\n    this.dispatch$.pipe(\n      filterEvent(eventType, groupName, elContainerSourceProjector)\n    );\n\n  public cancel = this.elContainerSource(EventTypes.Cancel);\n  public remove = this.elContainerSource(EventTypes.Remove);\n  public shadow = this.elContainerSource(EventTypes.Shadow);\n  public over = this.elContainerSource(EventTypes.Over);\n  public out = this.elContainerSource(EventTypes.Out);\n\n  public cloned = (groupName?: string) => this.dispatch$.pipe(\n    filterEvent(\n      EventTypes.Cloned,\n      groupName,\n      (name, [\n        clone, original, cloneType\n      ]: [Element, Element, 'mirror' | 'copy']) => {\n        return { name, clone, original, cloneType }\n      })\n  );\n\n  public dropModel = <T = any>(groupName?: string) => this.dispatch$.pipe(\n    filterEvent(\n      EventTypes.DropModel,\n      groupName,\n      (name, [\n        el, target, source, sibling, item, sourceModel, targetModel, sourceIndex, targetIndex\n      ]: [Element, Element, Element, Element, T, T[], T[], number, number]) => {\n        return { name, el, target, source, sibling, item, sourceModel, targetModel, sourceIndex, targetIndex }\n      })\n  );\n\n  public removeModel = <T = any>(groupName?: string) => this.dispatch$.pipe(\n    filterEvent(\n      EventTypes.RemoveModel,\n      groupName,\n      (name, [\n        el, container, source, item, sourceModel, sourceIndex\n      ]: [Element, Element, Element, T, T[], number]) => {\n        return { name, el, container, source, item, sourceModel, sourceIndex }\n      }\n    )\n  );\n\n  private groups: { [k: string]: Group } = {};\n\n  constructor (@Optional() private drakeFactory: DrakeFactory = null) {\n    if (this.drakeFactory === null) {\n      this.drakeFactory = new DrakeFactory();\n    }\n  }\n\n  /** Public mainly for testing purposes. Prefer `createGroup()`. */\n  public add(group: Group): Group {\n    let existingGroup = this.find(group.name);\n    if (existingGroup) {\n      throw new Error('Group named: \"' + group.name + '\" already exists.');\n    }\n    this.groups[group.name] = group;\n    this.handleModels(group);\n    this.setupEvents(group);\n    return group;\n  }\n\n  public find(name: string): Group {\n    return this.groups[name];\n  }\n\n  public destroy(name: string): void {\n    let group = this.find(name);\n    if (!group) {\n      return;\n    }\n    group.drake && group.drake.destroy();\n    delete this.groups[name];\n  }\n\n  /**\n   * Creates a group with the specified name and options.\n   *\n   * Note: formerly known as `setOptions`\n   */\n  public createGroup<T = any>(name: string, options: DragulaOptions<T>): Group {\n    return this.add(new Group(\n      name,\n      this.drakeFactory.build([], options),\n      options\n    ));\n  }\n\n  private handleModels({ name, drake, options }: Group): void {\n    let dragElm: any;\n    let dragIndex: number;\n    let dropIndex: number;\n    drake.on('remove', (el: any, container: any, source: any) => {\n      if (!drake.models) {\n        return;\n      }\n      let sourceModel = drake.models[drake.containers.indexOf(source)];\n      sourceModel = sourceModel.slice(0); // clone it\n      const item = sourceModel.splice(dragIndex, 1)[0];\n      // console.log('REMOVE');\n      // console.log(sourceModel);\n      this.dispatch$.next({\n        event: EventTypes.RemoveModel,\n        name,\n        args: [ el, container, source, item, sourceModel, dragIndex ]\n      });\n    });\n    drake.on('drag', (el: any, source: any) => {\n      if (!drake.models) {\n        return;\n      }\n      dragElm = el;\n      dragIndex = this.domIndexOf(el, source);\n    });\n    drake.on('drop', (dropElm: any, target: Element, source: Element, sibling?: Element) => {\n      if (!drake.models || !target) {\n        return;\n      }\n      dropIndex = this.domIndexOf(dropElm, target);\n      let sourceModel = drake.models[drake.containers.indexOf(source)];\n      let targetModel = drake.models[drake.containers.indexOf(target)];\n      // console.log('DROP');\n      // console.log(sourceModel);\n      let item: any;\n      if (target === source) {\n        sourceModel = sourceModel.slice(0)\n        item = sourceModel.splice(dragIndex, 1)[0];\n        sourceModel.splice(dropIndex, 0, item);\n        // this was true before we cloned and updated sourceModel,\n        // but targetModel still has the old value\n        targetModel = sourceModel;\n      } else {\n        let isCopying = dragElm !== dropElm;\n        item = sourceModel[dragIndex];\n        if (isCopying) {\n          if (!options.copyItem) {\n            throw new Error(\"If you have enabled `copy` on a group, you must provide a `copyItem` function.\")\n          }\n          item = options.copyItem(item);\n        }\n\n        if (!isCopying) {\n          sourceModel = sourceModel.slice(0)\n          sourceModel.splice(dragIndex, 1);\n        }\n        targetModel = targetModel.slice(0)\n        targetModel.splice(dropIndex, 0, item);\n        if (isCopying) {\n          try {\n            target.removeChild(dropElm);\n          } catch (e) {}\n        }\n      }\n      this.dispatch$.next({\n        event: EventTypes.DropModel,\n        name,\n        args: [ dropElm, target, source, sibling, item, sourceModel, targetModel, dragIndex, dropIndex ]\n      });\n    });\n  }\n\n  private setupEvents(group: Group): void {\n    if (group.initEvents) {\n      return;\n    }\n    group.initEvents = true;\n    const name = group.name;\n    let that: any = this;\n    let emitter = (event: EventTypes) => {\n      group.drake.on(event, (...args: any[]) => {\n        this.dispatch$.next({ event, name, args });\n      });\n    };\n    AllEvents.forEach(emitter);\n  }\n\n  private domIndexOf(child: any, parent: any): any {\n    return Array.prototype.indexOf.call(parent.children, child);\n  }\n}\n","import { Directive, Input, Output, ElementRef, OnInit, OnChanges, OnDestroy, SimpleChange, EventEmitter } from '@angular/core';\nimport { DragulaService } from './dragula.service';\nimport { DrakeWithModels } from '../DrakeWithModels';\nimport { Subscription } from 'rxjs';\nimport { Group } from '../Group';\n\n@Directive({selector: '[dragula]'})\nexport class DragulaDirective implements OnChanges, OnDestroy {\n  @Input() public dragula: string;\n  @Input() public dragulaModel: any[];\n  @Output() public dragulaModelChange = new EventEmitter<any[]>();\n\n  private subs: Subscription;\n\n  private get container(): HTMLElement {\n    return this.el && this.el.nativeElement;\n  }\n  private group: Group;\n\n  public constructor(private el: ElementRef, private dragulaService: DragulaService) {\n  }\n\n  public ngOnChanges(changes: {dragula?: SimpleChange, dragulaModel?: SimpleChange}): void {\n    if (changes && changes.dragula) {\n      const { previousValue: prev, currentValue: current, firstChange } = changes.dragula;\n      let hadPreviousValue = !!prev;\n      let hasNewValue = !!current;\n      // something -> null       =>  teardown only\n      // something -> something  =>  teardown, then setup\n      //      null -> something  =>  setup only\n      //\n      //      null -> null (precluded by fact of change being present)\n      if (hadPreviousValue) {\n        this.teardown(prev);\n      }\n      if (hasNewValue) {\n        this.setup();\n      }\n    } else if (changes && changes.dragulaModel) {\n      // this code only runs when you're not changing the group name\n      // because if you're changing the group name, you'll be doing setup or teardown\n      // it also only runs if there is a group name to attach to.\n      const { previousValue: prev, currentValue: current, firstChange } = changes.dragulaModel;\n      const { drake } = this.group;\n      if (this.dragula && drake) {\n        drake.models = drake.models || [];\n        let prevIndex = drake.models.indexOf(prev);\n        if (prevIndex !== -1) {\n          // delete the previous\n          drake.models.splice(prevIndex, 1);\n          // maybe insert a new one at the same spot\n          if (!!current) {\n            drake.models.splice(prevIndex, 0, current);\n          }\n        } else if (!!current) {\n          // no previous one to remove; just push this one.\n          drake.models.push(current);\n        }\n      }\n    }\n  }\n\n  // call ngOnInit 'setup' because we want to call it in ngOnChanges\n  // and it would otherwise run twice\n  public setup(): void {\n    let checkModel = (group: Group) => {\n      if (this.dragulaModel) {\n        if (group.drake.models) {\n          group.drake.models.push(this.dragulaModel);\n        } else {\n          group.drake.models = [this.dragulaModel];\n        }\n      }\n    };\n\n    // find or create a group\n    let group = this.dragulaService.find(this.dragula);\n    if (!group) {\n      let options = {};\n      group = this.dragulaService.createGroup(this.dragula, options);\n    }\n\n    // ensure model and container element are pushed\n    checkModel(group);\n    group.drake.containers.push(this.container);\n    this.subscribe(this.dragula);\n\n    this.group = group;\n  }\n\n  public subscribe(name: string) {\n    this.subs = new Subscription();\n    this.subs.add(\n      this.dragulaService\n      .dropModel(name)\n      .subscribe(({ source, target, sourceModel, targetModel }) => {\n        if (source === this.el.nativeElement) {\n          this.dragulaModelChange.emit(sourceModel);\n        } else if (target === this.el.nativeElement) {\n          this.dragulaModelChange.emit(targetModel);\n        }\n      })\n    );\n    this.subs.add(\n      this.dragulaService\n      .removeModel(name)\n      .subscribe(({ source, sourceModel }) => {\n        if (source === this.el.nativeElement) {\n          this.dragulaModelChange.emit(sourceModel);\n        }\n      })\n    );\n  }\n\n  public teardown(groupName: string): void {\n    if (this.subs) {\n      this.subs.unsubscribe();\n    }\n    const group = this.dragulaService.find(groupName);\n    if (group) {\n      const itemToRemove = group.drake.containers.indexOf(this.el.nativeElement);\n      if (itemToRemove !== -1) {\n        group.drake.containers.splice(itemToRemove, 1);\n      }\n      if (this.dragulaModel && group.drake && group.drake.models) {\n        let modelIndex = group.drake.models.indexOf(this.dragulaModel);\n        if (modelIndex !== -1) {\n          group.drake.models.splice(modelIndex, 1);\n        }\n      }\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.teardown(this.dragula);\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DragulaDirective } from './dragula.directive';\nimport { DragulaService } from './dragula.service';\n\n@NgModule({\n  exports: [DragulaDirective],\n  declarations: [DragulaDirective],\n})\nexport class DragulaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: DragulaModule,\n      providers: [DragulaService]\n    }\n  }\n}\n","import { Subject, Subscription } from 'rxjs';\nimport { DrakeWithModels } from './DrakeWithModels';\nimport { filter } from 'rxjs/operators';\nimport { EventTypes } from './EventTypes';\nimport { DragulaOptions } from './DragulaOptions';\nimport { DrakeFactory } from './DrakeFactory';\n\nexport const MockDrakeFactory = new DrakeFactory((containers, options) => {\n  return new MockDrake(containers, options);\n});\n\n/** You can use MockDrake to simulate Drake events.\n *\n * The three methods that actually do anything are `on(event, listener)`,\n * `destroy()`, and a new method, `emit()`. Use `emit()` to manually emit Drake\n * events, and if you injected MockDrake properly with MockDrakeFactory or\n * mocked the DragulaService.find() method, then you can make ng2-dragula think\n * drags and drops are happening.\n *\n * Caveats:\n *\n * 1. YOU MUST MAKE THE DOM CHANGES YOURSELF.\n * 2. REPEAT: YOU MUST MAKE THE DOM CHANGES YOURSELF.\n *    That means `source.removeChild(el)`, and `target.insertBefore(el)`.\n * 3. None of the other methods do anything.\n *    That's ok, because ng2-dragula doesn't use them.\n */\nexport class MockDrake implements DrakeWithModels {\n  /**\n   * @param containers A list of container elements.\n   * @param options These will NOT be used. At all.\n   * @param models Nonstandard, but useful for testing using `new MockDrake()` directly.\n   *               Note, default value is undefined, like a real Drake. Don't change that.\n   */\n  constructor(\n    public containers: Element[] = [],\n    public options: DragulaOptions = {},\n    public models?: any[][]\n  ) {}\n\n  /* Doesn't represent anything meaningful. */\n  dragging: boolean = false;\n\n  /* Does nothing useful. */\n  start(item: Element): any {\n    this.dragging = true;\n  }\n  /* Does nothing useful. */\n  end(): any {\n    this.dragging = false;\n  }\n  /* Does nothing useful. */\n  cancel(revert: boolean): any;\n  cancel(): any;\n  cancel(revert?: any) {\n    this.dragging = false;\n  }\n  /* Does nothing useful. */\n  remove(): any {\n    this.dragging = false;\n  }\n\n  // Basic but fully functional event emitter shim\n  private emitter$ = new Subject<{ eventType: EventTypes, args: any[] }>();\n\n  private subs = new Subscription();\n\n  on(event: string, callback: Function): any {\n    this.subs.add(this.emitter$\n      .pipe(\n        filter(({ eventType }) => eventType === event)\n      )\n      .subscribe(({ args }) => {\n        callback(...args);\n      }));\n  }\n\n  destroy(): any {\n    this.subs.unsubscribe();\n  }\n\n  /**\n   * This is the most useful method. You can use it to manually fire events that would normally\n   * be fired by a real drake.\n   *\n   * You're likely most interested in firing `drag`, `remove` and `drop`, the three events\n   * DragulaService uses to implement [dragulaModel].\n   *\n   * See https://github.com/bevacqua/dragula#drakeon-events for what you should emit (and in what order).\n   *\n   * (Note also, firing dropModel and removeModel won't work. You would have to mock DragulaService for that.)\n   */\n  emit(eventType: EventTypes, ...args: any[]) {\n    this.emitter$.next({ eventType, args })\n  }\n\n}\n"],"names":["((dragulaExpt)).default","filter","map","Subject","Injectable","Optional","EventEmitter","Subscription","Directive","ElementRef","Input","Output","NgModule"],"mappings":"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"}
