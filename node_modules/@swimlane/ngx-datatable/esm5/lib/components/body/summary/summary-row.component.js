import { __assign, __decorate } from "tslib";
import { Component, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '../body-row.component';

function DataTableSummaryRowComponent_datatable_body_row_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "datatable-body-row", 1);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerWidth", ctx_r0.innerWidth)("offsetX", ctx_r0.offsetX)("columns", ctx_r0._internalColumns)("rowHeight", ctx_r0.rowHeight)("row", ctx_r0.summaryRow)("rowIndex", -1);
} }
function defaultSumFunc(cells) {
    var cellsWithValues = cells.filter(function (cell) { return !!cell; });
    if (!cellsWithValues.length) {
        return null;
    }
    if (cellsWithValues.some(function (cell) { return typeof cell !== 'number'; })) {
        return null;
    }
    return cellsWithValues.reduce(function (res, cell) { return res + cell; });
}
function noopSumFunc(cells) {
    return null;
}
var DataTableSummaryRowComponent = /** @class */ (function () {
    function DataTableSummaryRowComponent() {
        this.summaryRow = {};
    }
    DataTableSummaryRowComponent.prototype.ngOnChanges = function () {
        if (!this.columns || !this.rows) {
            return;
        }
        this.updateInternalColumns();
        this.updateValues();
    };
    DataTableSummaryRowComponent.prototype.updateInternalColumns = function () {
        this._internalColumns = this.columns.map(function (col) { return (__assign(__assign({}, col), { cellTemplate: col.summaryTemplate })); });
    };
    DataTableSummaryRowComponent.prototype.updateValues = function () {
        var _this = this;
        this.summaryRow = {};
        this.columns
            .filter(function (col) { return !col.summaryTemplate; })
            .forEach(function (col) {
            var cellsFromSingleColumn = _this.rows.map(function (row) { return row[col.prop]; });
            var sumFunc = _this.getSummaryFunction(col);
            _this.summaryRow[col.prop] = col.pipe
                ? col.pipe.transform(sumFunc(cellsFromSingleColumn))
                : sumFunc(cellsFromSingleColumn);
        });
    };
    DataTableSummaryRowComponent.prototype.getSummaryFunction = function (column) {
        if (column.summaryFunc === undefined) {
            return defaultSumFunc;
        }
        else if (column.summaryFunc === null) {
            return noopSumFunc;
        }
        else {
            return column.summaryFunc;
        }
    };
    __decorate([
        Input()
    ], DataTableSummaryRowComponent.prototype, "rows", void 0);
    __decorate([
        Input()
    ], DataTableSummaryRowComponent.prototype, "columns", void 0);
    __decorate([
        Input()
    ], DataTableSummaryRowComponent.prototype, "rowHeight", void 0);
    __decorate([
        Input()
    ], DataTableSummaryRowComponent.prototype, "offsetX", void 0);
    __decorate([
        Input()
    ], DataTableSummaryRowComponent.prototype, "innerWidth", void 0);
DataTableSummaryRowComponent.ɵfac = function DataTableSummaryRowComponent_Factory(t) { return new (t || DataTableSummaryRowComponent)(); };
DataTableSummaryRowComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DataTableSummaryRowComponent, selectors: [["datatable-summary-row"]], hostAttrs: [1, "datatable-summary-row"], inputs: { rows: "rows", columns: "columns", rowHeight: "rowHeight", offsetX: "offsetX", innerWidth: "innerWidth" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [["tabindex", "-1", 3, "innerWidth", "offsetX", "columns", "rowHeight", "row", "rowIndex", 4, "ngIf"], ["tabindex", "-1", 3, "innerWidth", "offsetX", "columns", "rowHeight", "row", "rowIndex"]], template: function DataTableSummaryRowComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, DataTableSummaryRowComponent_datatable_body_row_0_Template, 1, 6, "datatable-body-row", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.summaryRow && ctx._internalColumns);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.DataTableBodyRowComponent], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataTableSummaryRowComponent, [{
        type: Component,
        args: [{
                selector: 'datatable-summary-row',
                template: "\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  ",
                host: {
                    class: 'datatable-summary-row'
                }
            }]
    }], function () { return []; }, { rows: [{
            type: Input
        }], columns: [{
            type: Input
        }], rowHeight: [{
            type: Input
        }], offsetX: [{
            type: Input
        }], innerWidth: [{
            type: Input
        }] }); })();
    return DataTableSummaryRowComponent;
}());
export { DataTableSummaryRowComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VtbWFyeS1yb3cuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJAc3dpbWxhbmUvbmd4LWRhdGF0YWJsZS9saWIvY29tcG9uZW50cy9ib2R5L3N1bW1hcnkvc3VtbWFyeS1yb3cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBeUMsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7O0FBVXhGLFNBQVMsY0FBYyxDQUFDLEtBQVk7QUFBSSxJQUN0QyxJQUFNLGVBQWUsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsQ0FBQyxDQUFDLElBQUksRUFBTixDQUFNLENBQUMsQ0FBQztBQUN2RCxJQUNFLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxFQUFFO0FBQy9CLFFBQUksT0FBTyxJQUFJLENBQUM7QUFDaEIsS0FBRztBQUNILElBQUUsSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLFVBQUEsSUFBSSxJQUFJLE9BQUEsT0FBTyxJQUFJLEtBQUssUUFBUSxFQUF4QixDQUF3QixDQUFDLEVBQUU7QUFDOUQsUUFBSSxPQUFPLElBQUksQ0FBQztBQUNoQixLQUFHO0FBQ0gsSUFDRSxPQUFPLGVBQWUsQ0FBQyxNQUFNLENBQUMsVUFBQyxHQUFHLEVBQUUsSUFBSSxJQUFLLE9BQUEsR0FBRyxHQUFHLElBQUksRUFBVixDQUFVLENBQUMsQ0FBQztBQUMzRCxDQUFDO0FBRUQsU0FBUyxXQUFXLENBQUMsS0FBWTtBQUFJLElBQ25DLE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQXFCRDtBQUFnRSxJQUFoRTtBQUEwQyxRQVN4QyxlQUFVLEdBQVEsRUFBRSxDQUFDO0FBQ3ZCLElBd0NBLENBQUM7QUFDRCxJQXhDRSxrREFBVyxHQUFYO0FBQWMsUUFDWixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUU7QUFDckMsWUFBTSxPQUFPO0FBQ2IsU0FBSztBQUNMLFFBQUksSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7QUFDakMsUUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7QUFDeEIsSUFBRSxDQUFDO0FBRUgsSUFBVSw0REFBcUIsR0FBN0I7QUFBYyxRQUNaLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFBLEdBQUcsSUFBSSxPQUFBLHVCQUMzQyxHQUFHLEtBQ04sWUFBWSxFQUFFLEdBQUcsQ0FBQyxlQUFlLElBQ2pDLEVBSDhDLENBRzlDLENBQUMsQ0FBQztBQUNSLElBQUUsQ0FBQztBQUVILElBQVUsbURBQVksR0FBcEI7QUFBYyxRQUFkLGlCQWFDO0FBQ0gsUUFiSSxJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQztBQUN6QixRQUNJLElBQUksQ0FBQyxPQUFPO0FBQ2hCLGFBQU8sTUFBTSxDQUFDLFVBQUEsR0FBRyxJQUFJLE9BQUEsQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFwQixDQUFvQixDQUFDO0FBQzFDLGFBQU8sT0FBTyxDQUFDLFVBQUEsR0FBRztBQUFJLFlBQ2QsSUFBTSxxQkFBcUIsR0FBRyxLQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxVQUFBLEdBQUcsSUFBSSxPQUFBLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQWIsQ0FBYSxDQUFDLENBQUM7QUFDMUUsWUFBUSxJQUFNLE9BQU8sR0FBRyxLQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDckQsWUFDUSxLQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLENBQUMsSUFBSTtBQUM1QyxnQkFBVSxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLHFCQUFxQixDQUFDLENBQUM7QUFDOUQsZ0JBQVUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0FBQzNDLFFBQU0sQ0FBQyxDQUFDLENBQUM7QUFDVCxJQUFFLENBQUM7QUFFSCxJQUFVLHlEQUFrQixHQUExQixVQUEyQixNQUFzQjtBQUFJLFFBQ25ELElBQUksTUFBTSxDQUFDLFdBQVcsS0FBSyxTQUFTLEVBQUU7QUFDMUMsWUFBTSxPQUFPLGNBQWMsQ0FBQztBQUM1QixTQUFLO0FBQUMsYUFBSyxJQUFJLE1BQU0sQ0FBQyxXQUFXLEtBQUssSUFBSSxFQUFFO0FBQzVDLFlBQU0sT0FBTyxXQUFXLENBQUM7QUFDekIsU0FBSztBQUFDLGFBQUs7QUFDWCxZQUFNLE9BQU8sTUFBTSxDQUFDLFdBQVcsQ0FBQztBQUNoQyxTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0YsSUFqRFU7QUFDWCxRQURHLEtBQUssRUFBRTtBQUFDLDhEQUFZO0FBQ3RCLElBQVU7QUFBYSxRQUFyQixLQUFLLEVBQUU7QUFBQyxpRUFBMEI7QUFFckMsSUFBVztBQUFhLFFBQXJCLEtBQUssRUFBRTtBQUFDLG1FQUFrQjtBQUM1QixJQUFVO0FBQWEsUUFBckIsS0FBSyxFQUFFO0FBQUMsaUVBQWdCO0FBQzFCLElBQVU7QUFBYSxRQUFyQixLQUFLLEVBQUU7QUFBQyxvRUFBbUI7SUFOakIsNEJBQTRCLHdCQW5CeEMsU0FBUyxDQUFDLGNBQ1QsUUFBUSxFQUFFLHVCQUF1QixjQUNqQyxRQUFRLEVBQUU7aVVBWVQsY0FDRCxJQUFJLEVBQUUsa0JBQ0osS0FBSyxFQUFFLHVCQUF1QixjQUMvQixVQUNGLENBQUMsUUFDVyw0QkFBNEIsQ0FrRHhDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxJQURELG1DQUFDO0FBQ0EsQ0FEQSxBQWxERCxJQWtEQztBQUNELFNBbkRhLDRCQUE0QjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25DaGFuZ2VzLCBQaXBlVHJhbnNmb3JtLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIElTdW1tYXJ5Q29sdW1uIHtcbiAgc3VtbWFyeUZ1bmM/OiAoY2VsbHM6IGFueVtdKSA9PiBhbnk7XG4gIHN1bW1hcnlUZW1wbGF0ZT86IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgcHJvcDogc3RyaW5nO1xuICBwaXBlPzogUGlwZVRyYW5zZm9ybTtcbn1cblxuZnVuY3Rpb24gZGVmYXVsdFN1bUZ1bmMoY2VsbHM6IGFueVtdKTogYW55IHtcbiAgY29uc3QgY2VsbHNXaXRoVmFsdWVzID0gY2VsbHMuZmlsdGVyKGNlbGwgPT4gISFjZWxsKTtcblxuICBpZiAoIWNlbGxzV2l0aFZhbHVlcy5sZW5ndGgpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBpZiAoY2VsbHNXaXRoVmFsdWVzLnNvbWUoY2VsbCA9PiB0eXBlb2YgY2VsbCAhPT0gJ251bWJlcicpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4gY2VsbHNXaXRoVmFsdWVzLnJlZHVjZSgocmVzLCBjZWxsKSA9PiByZXMgKyBjZWxsKTtcbn1cblxuZnVuY3Rpb24gbm9vcFN1bUZ1bmMoY2VsbHM6IGFueVtdKTogdm9pZCB7XG4gIHJldHVybiBudWxsO1xufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdkYXRhdGFibGUtc3VtbWFyeS1yb3cnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkYXRhdGFibGUtYm9keS1yb3dcbiAgICAgICpuZ0lmPVwic3VtbWFyeVJvdyAmJiBfaW50ZXJuYWxDb2x1bW5zXCJcbiAgICAgIHRhYmluZGV4PVwiLTFcIlxuICAgICAgW2lubmVyV2lkdGhdPVwiaW5uZXJXaWR0aFwiXG4gICAgICBbb2Zmc2V0WF09XCJvZmZzZXRYXCJcbiAgICAgIFtjb2x1bW5zXT1cIl9pbnRlcm5hbENvbHVtbnNcIlxuICAgICAgW3Jvd0hlaWdodF09XCJyb3dIZWlnaHRcIlxuICAgICAgW3Jvd109XCJzdW1tYXJ5Um93XCJcbiAgICAgIFtyb3dJbmRleF09XCItMVwiXG4gICAgPlxuICAgIDwvZGF0YXRhYmxlLWJvZHktcm93PlxuICBgLFxuICBob3N0OiB7XG4gICAgY2xhc3M6ICdkYXRhdGFibGUtc3VtbWFyeS1yb3cnXG4gIH1cbn0pXG5leHBvcnQgY2xhc3MgRGF0YVRhYmxlU3VtbWFyeVJvd0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpIHJvd3M6IGFueVtdO1xuICBASW5wdXQoKSBjb2x1bW5zOiBJU3VtbWFyeUNvbHVtbltdO1xuXG4gIEBJbnB1dCgpIHJvd0hlaWdodDogbnVtYmVyO1xuICBASW5wdXQoKSBvZmZzZXRYOiBudW1iZXI7XG4gIEBJbnB1dCgpIGlubmVyV2lkdGg6IG51bWJlcjtcblxuICBfaW50ZXJuYWxDb2x1bW5zOiBJU3VtbWFyeUNvbHVtbltdO1xuICBzdW1tYXJ5Um93OiBhbnkgPSB7fTtcblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICBpZiAoIXRoaXMuY29sdW1ucyB8fCAhdGhpcy5yb3dzKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMudXBkYXRlSW50ZXJuYWxDb2x1bW5zKCk7XG4gICAgdGhpcy51cGRhdGVWYWx1ZXMoKTtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlSW50ZXJuYWxDb2x1bW5zKCkge1xuICAgIHRoaXMuX2ludGVybmFsQ29sdW1ucyA9IHRoaXMuY29sdW1ucy5tYXAoY29sID0+ICh7XG4gICAgICAuLi5jb2wsXG4gICAgICBjZWxsVGVtcGxhdGU6IGNvbC5zdW1tYXJ5VGVtcGxhdGVcbiAgICB9KSk7XG4gIH1cblxuICBwcml2YXRlIHVwZGF0ZVZhbHVlcygpIHtcbiAgICB0aGlzLnN1bW1hcnlSb3cgPSB7fTtcblxuICAgIHRoaXMuY29sdW1uc1xuICAgICAgLmZpbHRlcihjb2wgPT4gIWNvbC5zdW1tYXJ5VGVtcGxhdGUpXG4gICAgICAuZm9yRWFjaChjb2wgPT4ge1xuICAgICAgICBjb25zdCBjZWxsc0Zyb21TaW5nbGVDb2x1bW4gPSB0aGlzLnJvd3MubWFwKHJvdyA9PiByb3dbY29sLnByb3BdKTtcbiAgICAgICAgY29uc3Qgc3VtRnVuYyA9IHRoaXMuZ2V0U3VtbWFyeUZ1bmN0aW9uKGNvbCk7XG5cbiAgICAgICAgdGhpcy5zdW1tYXJ5Um93W2NvbC5wcm9wXSA9IGNvbC5waXBlXG4gICAgICAgICAgPyBjb2wucGlwZS50cmFuc2Zvcm0oc3VtRnVuYyhjZWxsc0Zyb21TaW5nbGVDb2x1bW4pKVxuICAgICAgICAgIDogc3VtRnVuYyhjZWxsc0Zyb21TaW5nbGVDb2x1bW4pO1xuICAgICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGdldFN1bW1hcnlGdW5jdGlvbihjb2x1bW46IElTdW1tYXJ5Q29sdW1uKTogKGE6IGFueVtdKSA9PiBhbnkge1xuICAgIGlmIChjb2x1bW4uc3VtbWFyeUZ1bmMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIGRlZmF1bHRTdW1GdW5jO1xuICAgIH0gZWxzZSBpZiAoY29sdW1uLnN1bW1hcnlGdW5jID09PSBudWxsKSB7XG4gICAgICByZXR1cm4gbm9vcFN1bUZ1bmM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBjb2x1bW4uc3VtbWFyeUZ1bmM7XG4gICAgfVxuICB9XG59XG4iXX0=