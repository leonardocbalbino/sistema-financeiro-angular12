{"version":3,"file":"ngx-echarts.js","sources":["ng://ngx-echarts/lib/change-filter.ts","ng://ngx-echarts/lib/ngx-echarts.directive.ts","ng://ngx-echarts/lib/ngx-echarts.module.ts","ng://ngx-echarts/public-api.ts","ng://ngx-echarts/ngx-echarts.ts"],"sourcesContent":["import { SimpleChanges } from '@angular/core';\nimport { Observable, of, EMPTY } from 'rxjs';\n\nexport class ChangeFilter {\n  constructor(private changes: SimpleChanges) { }\n\n  static of(changes: SimpleChanges) {\n    return new ChangeFilter(changes);\n  }\n\n  notEmpty<T>(key: string): Observable<T> {\n    if (this.changes[key]) {\n      const value: T = this.changes[key].currentValue;\n\n      if (value !== undefined && value !== null) {\n        return of(value);\n      }\n    }\n    return EMPTY;\n  }\n\n  has<T>(key: string): Observable<T> {\n    if (this.changes[key]) {\n      const value: T = this.changes[key].currentValue;\n      return of(value);\n    }\n    return EMPTY;\n  }\n\n  notFirst<T>(key: string): Observable<T> {\n    if (this.changes[key] && !this.changes[key].isFirstChange()) {\n      const value: T = this.changes[key].currentValue;\n      return of(value);\n    }\n    return EMPTY;\n  }\n\n  notFirstAndEmpty<T>(key: string): Observable<T> {\n    if (this.changes[key] && !this.changes[key].isFirstChange()) {\n      const value: T = this.changes[key].currentValue;\n\n      if (value !== undefined && value !== null) {\n        return of(value);\n      }\n    }\n    return EMPTY;\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  InjectionToken,\n  Inject,\n} from '@angular/core';\nimport { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { ChangeFilter } from './change-filter';\n\nexport interface NgxEchartsConfig {\n  echarts: any;\n}\nexport const NGX_ECHARTS_CONFIG = new InjectionToken<NgxEchartsConfig>('NGX_ECHARTS_CONFIG');\n\n@Directive({\n  selector: 'echarts, [echarts]',\n  exportAs: 'echarts',\n})\nexport class NgxEchartsDirective implements OnChanges, OnDestroy, OnInit, DoCheck, AfterViewInit {\n  @Input() options: any;\n  @Input() theme: string;\n  @Input() loading: boolean;\n  @Input() initOpts: {\n    devicePixelRatio?: number;\n    renderer?: string;\n    width?: number | string;\n    height?: number | string;\n  };\n  @Input() merge: any;\n  @Input() autoResize = true;\n  @Input() loadingType = 'default';\n  @Input() loadingOpts: object;\n\n  // ngx-echarts events\n  @Output() chartInit = new EventEmitter<any>();\n\n  // echarts mouse events\n  @Output() chartClick = this.createLazyEvent('click');\n  @Output() chartDblClick = this.createLazyEvent('dblclick');\n  @Output() chartMouseDown = this.createLazyEvent('mousedown');\n  @Output() chartMouseMove = this.createLazyEvent('mousemove');\n  @Output() chartMouseUp = this.createLazyEvent('mouseup');\n  @Output() chartMouseOver = this.createLazyEvent('mouseover');\n  @Output() chartMouseOut = this.createLazyEvent('mouseout');\n  @Output() chartGlobalOut = this.createLazyEvent('globalout');\n  @Output() chartContextMenu = this.createLazyEvent('contextmenu');\n\n  // echarts mouse events\n  @Output() chartLegendSelectChanged = this.createLazyEvent('legendselectchanged');\n  @Output() chartLegendSelected = this.createLazyEvent('legendselected');\n  @Output() chartLegendUnselected = this.createLazyEvent('legendunselected');\n  @Output() chartLegendScroll = this.createLazyEvent('legendscroll');\n  @Output() chartDataZoom = this.createLazyEvent('datazoom');\n  @Output() chartDataRangeSelected = this.createLazyEvent('datarangeselected');\n  @Output() chartTimelineChanged = this.createLazyEvent('timelinechanged');\n  @Output() chartTimelinePlayChanged = this.createLazyEvent('timelineplaychanged');\n  @Output() chartRestore = this.createLazyEvent('restore');\n  @Output() chartDataViewChanged = this.createLazyEvent('dataviewchanged');\n  @Output() chartMagicTypeChanged = this.createLazyEvent('magictypechanged');\n  @Output() chartPieSelectChanged = this.createLazyEvent('pieselectchanged');\n  @Output() chartPieSelected = this.createLazyEvent('pieselected');\n  @Output() chartPieUnselected = this.createLazyEvent('pieunselected');\n  @Output() chartMapSelectChanged = this.createLazyEvent('mapselectchanged');\n  @Output() chartMapSelected = this.createLazyEvent('mapselected');\n  @Output() chartMapUnselected = this.createLazyEvent('mapunselected');\n  @Output() chartAxisAreaSelected = this.createLazyEvent('axisareaselected');\n  @Output() chartFocusNodeAdjacency = this.createLazyEvent('focusnodeadjacency');\n  @Output() chartUnfocusNodeAdjacency = this.createLazyEvent('unfocusnodeadjacency');\n  @Output() chartBrush = this.createLazyEvent('brush');\n  @Output() chartBrushSelected = this.createLazyEvent('brushselected');\n  @Output() chartRendered = this.createLazyEvent('rendered');\n  @Output() chartFinished = this.createLazyEvent('finished');\n\n  private chart: any;\n  private echarts: any;\n  private currentOffsetWidth = 0;\n  private currentOffsetHeight = 0;\n  private currentWindowWidth: number;\n  private resizeSub: Subscription;\n\n  constructor(\n    @Inject(NGX_ECHARTS_CONFIG) config: NgxEchartsConfig,\n    private el: ElementRef,\n    private ngZone: NgZone,\n  ) {\n    this.echarts = config.echarts;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const filter = ChangeFilter.of(changes);\n    filter.notFirstAndEmpty<any>('options').subscribe((opt) => this.onOptionsChange(opt));\n    filter.notFirstAndEmpty<any>('merge').subscribe((opt) => this.setOption(opt));\n    filter.has<boolean>('loading').subscribe((v) => this.toggleLoading(!!v));\n    filter.notFirst<string>('theme').subscribe(() => this.refreshChart());\n  }\n\n  ngOnInit() {\n    this.resizeSub = fromEvent(window, 'resize')\n      .pipe(debounceTime(50))\n      .subscribe(() => {\n        if (this.autoResize && window.innerWidth !== this.currentWindowWidth) {\n          this.currentWindowWidth = window.innerWidth;\n          this.currentOffsetWidth = this.el.nativeElement.offsetWidth;\n          this.currentOffsetHeight = this.el.nativeElement.offsetHeight;\n          this.resize();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.resizeSub) {\n      this.resizeSub.unsubscribe();\n    }\n    this.dispose();\n  }\n\n  ngDoCheck() {\n    // No heavy work in DoCheck!\n    if (this.chart && this.autoResize) {\n      const offsetWidth = this.el.nativeElement.offsetWidth;\n      const offsetHeight = this.el.nativeElement.offsetHeight;\n\n      if (this.currentOffsetWidth !== offsetWidth || this.currentOffsetHeight !== offsetHeight) {\n        this.currentOffsetWidth = offsetWidth;\n        this.currentOffsetHeight = offsetHeight;\n        this.resize();\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => this.initChart());\n  }\n\n  private dispose() {\n    if (this.chart) {\n      this.chart.dispose();\n      this.chart = null;\n    }\n  }\n\n  private resize() {\n    if (this.chart) {\n      this.chart.resize();\n    }\n  }\n\n  private toggleLoading(loading: boolean) {\n    if (this.chart) {\n      loading\n        ? this.chart.showLoading(this.loadingType, this.loadingOpts)\n        : this.chart.hideLoading();\n    }\n  }\n\n  private setOption(option: any, opts?: any) {\n    if (this.chart) {\n      this.chart.setOption(option, opts);\n    }\n  }\n\n  private refreshChart() {\n    this.dispose();\n    this.initChart();\n  }\n\n  private createChart() {\n    this.currentWindowWidth = window.innerWidth;\n    this.currentOffsetWidth = this.el.nativeElement.offsetWidth;\n    this.currentOffsetHeight = this.el.nativeElement.offsetHeight;\n    const dom = this.el.nativeElement;\n\n    if (window && window.getComputedStyle) {\n      const prop = window.getComputedStyle(dom, null).getPropertyValue('height');\n      if ((!prop || prop === '0px') && (!dom.style.height || dom.style.height === '0px')) {\n        dom.style.height = '400px';\n      }\n    }\n\n    return this.ngZone.runOutsideAngular(() => this.echarts.init(dom, this.theme, this.initOpts));\n  }\n\n  private initChart() {\n    this.onOptionsChange(this.options);\n\n    if (this.merge && this.chart) {\n      this.setOption(this.merge);\n    }\n  }\n\n  private onOptionsChange(opt: any) {\n    if (opt) {\n      if (!this.chart) {\n        this.chart = this.createChart();\n        this.chartInit.emit(this.chart);\n      }\n\n      this.chart.setOption(this.options, true);\n    }\n  }\n\n  // allows to lazily bind to only those events that are requested through the `@Output` by parent components\n  // see https://stackoverflow.com/questions/51787972/optimal-reentering-the-ngzone-from-eventemitter-event for more info\n  private createLazyEvent<T>(eventName: string): EventEmitter<T> {\n    return this.chartInit.pipe(\n      switchMap(\n        (chart: any) =>\n          new Observable((observer) => {\n            chart.on(eventName, (data: T) => this.ngZone.run(() => observer.next(data)));\n            return () => chart.off(eventName);\n          }),\n      ),\n    ) as EventEmitter<T>;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxEchartsDirective, NgxEchartsConfig, NGX_ECHARTS_CONFIG } from './ngx-echarts.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [NgxEchartsDirective],\n  exports: [NgxEchartsDirective],\n})\nexport class NgxEchartsModule {\n  static forRoot(config: NgxEchartsConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxEchartsModule,\n      providers: [{ provide: NGX_ECHARTS_CONFIG, useValue: config }],\n    };\n  }\n  static forChild() {\n    return {\n      ngModule: NgxEchartsModule,\n    };\n  }\n}\n\nexport { NgxEchartsDirective };\n","/*\n * Public API Surface of ngx-echarts\n */\n\nexport * from './lib/ngx-echarts.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NGX_ECHARTS_CONFIG as Éµa} from './lib/ngx-echarts.directive';"],"names":[],"mappings":"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"}