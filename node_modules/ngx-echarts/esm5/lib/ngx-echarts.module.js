import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { NgxEchartsDirective, NGX_ECHARTS_CONFIG } from './ngx-echarts.directive';
import * as ɵngcc0 from '@angular/core';
var NgxEchartsModule = /** @class */ (function () {
    function NgxEchartsModule() {
    }
    NgxEchartsModule_1 = NgxEchartsModule;
    NgxEchartsModule.forRoot = function (config) {
        return {
            ngModule: NgxEchartsModule_1,
            providers: [{ provide: NGX_ECHARTS_CONFIG, useValue: config }],
        };
    };
    NgxEchartsModule.forChild = function () {
        return {
            ngModule: NgxEchartsModule_1,
        };
    };
    var NgxEchartsModule_1;
NgxEchartsModule.ɵfac = function NgxEchartsModule_Factory(t) { return new (t || NgxEchartsModule)(); };
NgxEchartsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxEchartsModule });
NgxEchartsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxEchartsModule, [{
        type: NgModule,
        args: [{
                imports: [],
                declarations: [NgxEchartsDirective],
                exports: [NgxEchartsDirective]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxEchartsModule, { declarations: function () { return [NgxEchartsDirective]; }, exports: function () { return [NgxEchartsDirective]; } }); })();
    return NgxEchartsModule;
}());
export { NgxEchartsModule };
export { NgxEchartsDirective };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWVjaGFydHMubW9kdWxlLmpzIiwic291cmNlcyI6WyJuZ3gtZWNoYXJ0cy9saWIvbmd4LWVjaGFydHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQW9CLGtCQUFrQixFQUFFLE1BQU0seUJBQXlCLENBQUM7O0FBT3BHO0FBQ29CLElBRHBCO0FBQThCLElBWTlCLENBQUM7QUFDRCx5QkFiYSxnQkFBZ0I7QUFBRSxJQUN0Qix3QkFBTyxHQUFkLFVBQWUsTUFBd0I7QUFBSSxRQUN6QyxPQUFPO0FBQ1gsWUFBTSxRQUFRLEVBQUUsa0JBQWdCO0FBQ2hDLFlBQU0sU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxDQUFDO0FBQ3BFLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUNGLElBQVEseUJBQVEsR0FBZjtBQUFjLFFBQ1osT0FBTztBQUNYLFlBQU0sUUFBUSxFQUFFLGtCQUFnQjtBQUNoQyxTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7QUFDRjtJQVpZLGdCQUFnQiw2Q0FMNUIsUUFBUSxDQUFDLGNBQ1IsT0FBTyxFQUFFLEVBQUU7U0FDWCxZQUFZLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxjQUNuQyxPQUFPLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztRQUMvQixDQUFDLFFBQ1csZ0JBQWdCLENBWTVCOzs7Ozs7Ozs7Nk9BQ0Q7QUFDQSxJQUZBLHVCQUFDO0FBRUQsQ0FGQyxBQVpELElBWUM7QUFDRCxTQWJhLGdCQUFnQjtBQWM3QixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsQ0FBQztBQUMvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ3hFY2hhcnRzRGlyZWN0aXZlLCBOZ3hFY2hhcnRzQ29uZmlnLCBOR1hfRUNIQVJUU19DT05GSUcgfSBmcm9tICcuL25neC1lY2hhcnRzLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtdLFxuICBkZWNsYXJhdGlvbnM6IFtOZ3hFY2hhcnRzRGlyZWN0aXZlXSxcbiAgZXhwb3J0czogW05neEVjaGFydHNEaXJlY3RpdmVdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ3hFY2hhcnRzTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoY29uZmlnOiBOZ3hFY2hhcnRzQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOZ3hFY2hhcnRzTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbeyBwcm92aWRlOiBOR1hfRUNIQVJUU19DT05GSUcsIHVzZVZhbHVlOiBjb25maWcgfV0sXG4gICAgfTtcbiAgfVxuICBzdGF0aWMgZm9yQ2hpbGQoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOZ3hFY2hhcnRzTW9kdWxlLFxuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IHsgTmd4RWNoYXJ0c0RpcmVjdGl2ZSB9O1xuIl19